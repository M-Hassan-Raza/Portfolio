[{"content":" Explore My Resources Here, you'll find a curated collection of my past writings, book recommendations, and other useful content. Whether you're looking for in-depth articles or insightful reads, this page serves as a gateway to valuable knowledge. My Blog Dive into my blog, where I share my thoughts on technology, software engineering, productivity, and personal growth. Explore a wide range of topics and discover new perspectives on the ever-evolving world of tech. Visit Blog\nBook Recommendations I’ve compiled a list of books that have significantly impacted my thinking and professional journey. These books cover a range of topics including software engineering, business, productivity, and personal growth. Explore Books\nArchive Looking for older articles? My archive contains all my past writings on technology, business, and problem-solving. Browse through different categories and find content that resonates with your interests. View Archive\n","permalink":"https://mhassan.dev/resources/","summary":"\u003cdiv class=\"resources-container\"\u003e\n\u003ch2 id=\"explore-my-resources\"\u003eExplore My Resources\u003c/h2\u003e\n\u003cp class=\"justified-text\"\u003e\nHere, you'll find a curated collection of my past writings, book recommendations, and other useful content. Whether you're looking for in-depth articles or insightful reads, this page serves as a gateway to valuable knowledge.\n\u003c/p\u003e\n\u003ch3 id=\"my-blog\"\u003eMy Blog\u003c/h3\u003e\n\u003cp class=\"justified-text\"\u003e\nDive into my blog, where I share my thoughts on technology, software engineering, productivity, and personal growth. Explore a wide range of topics and discover new perspectives on the ever-evolving world of tech.\n\u003c/p\u003e","title":"Resources"},{"content":" Introduction The fact that you have decided to read this behemoth of an article deserves admiration and tells me that you're serious about your academics and career (or are procrastinating on something else). Give me the next 20 mins of your life and I'll make you into a much more informed individual. Your Final Year Project (FYP) is one of the most important academic tasks in your degree. It can shape your future career, boost your portfolio, and improve your problem-solving skills. This guide will help you choose the right topic, advisor, tech stack, and strategy to ensure your FYP stands out. This guide is mainly targets FASTians because of my experience, but the advice can be applied to any university. Also, I claim to be no expert in this field. I'm just a student who's been through the process and wants to help others navigate it. So take my very opinionated advice with a grain of salt. Research \u0026amp; Development vs. Development When planning your FYP, it’s essential to decide which type of project best aligns with your interests, skills, and career goals. Generally, there are two broad categories:\nResearch \u0026amp; Development (R\u0026amp;D) Projects: These combine a theoretical research component with a practical implementation aspect. They often involve exploring new concepts, conducting literature reviews, and testing hypotheses alongside building a functional prototype. Pure Development Projects: These focus mainly on building a fully functional product or system. The emphasis here is on applying existing technologies and methodologies to create a tangible solution, often with less emphasis on novel research. Below is a comparison of the pros and cons of each approach:\nAspect R\u0026amp;D Projects Pure Development Focus Research + prototype Build a complete product Innovation Novel contributions, possible publications Applies proven methods Time \u0026amp; Risk Longer, uncertain outcomes Predictable, lower risk Career Fit Academia, research roles Industry, hands-on coding Documentation Research-heavy reports Technical \u0026amp; project docs Tip: Choose a Research \u0026amp; Development project if you’re passionate about exploring new ideas and contributing to academic knowledge—even if it means facing higher uncertainty. Opt for a Pure Development project if you prefer focusing on practical application and building a market-ready product while showcasing your technical skills to future employers.\nHow to Choose a Topic Picking the right topic is critical for a successful FYP. A good topic should be:\nInteresting: Choose something you\u0026rsquo;re passionate about. No one wants to work on a boring project, let alone for a whole year. Feasible: Consider your time, skills, and available resources. Scope is one of the most important factors when it comes to your FYP. It will dictate your life for the next year. And what\u0026rsquo;s more? It will be the first thing your advisor(s) and the evaluation committee will ask you about. Relevant: Align with industry trends or research needs. As an example, I am an avid \u0026ldquo;AI\u0026rdquo; pessimist but I can\u0026rsquo;t deny the fact that it\u0026rsquo;s the hottest trend in the industry right now. So, if you\u0026rsquo;re into AI, you might want to consider a project in that domain. Look at the recent explosion of AI Agents and Generative AI. I have many concerns about the ethical implications of these technologies but that\u0026rsquo;s a topic for another day. You want a skillset that\u0026rsquo;s in demand, or at the very least will allow you to have a good conversation with a potential employer. However, this is not to say that you should pick the next hottest thing and chase after it, because, by the time you\u0026rsquo;re done with your project, it might not be the hottest thing anymore. You should pick something that you\u0026rsquo;re passionate about and what aligns with your academic and career goals. Problem-Solving: Your project should address a real problem or offer innovation. Please don\u0026rsquo;t just build another e-commerce website or a basic recommendation system. Building a novel project will not only make you stand out but also give you a sense of accomplishment (and probably a few sleepless nights but you\u0026rsquo;re a FASTian, it\u0026rsquo;s your life anyway). Tip: Browse research papers, GitHub projects, and tech blogs for inspiration. Look at what the students from foreign universities are doing. They\u0026rsquo;re not necessarily smarter than you but they have access to better resources and they\u0026rsquo;re more likely to be working on cutting-edge projects. You don\u0026rsquo;t have to copy them, but you should never give up on the opportunity to learn from them. A good way to shortlist a project is to do a preliminary literature review. This will give you an idea of what\u0026rsquo;s already been done and what hasn\u0026rsquo;t. Don\u0026rsquo;t wanna jump into an overcrowded room now, do you?\nHow to Choose an Advisor Your advisor plays a huge role in your project\u0026rsquo;s success. A good advisor should be:\nExperienced in your chosen field: If your idea is novel enough and complex enough, you might want to consider an advisor who has experience in that domain. They can guide you better and help you avoid common pitfalls. A good example of this is the HODs who excel in their respective fields. They\u0026rsquo;re usually very busy but if you can get them to agree to be your advisor, you\u0026rsquo;re in for a treat. However, many many other faculty members who are just as good (if not better, considering they have more time to dedicate to you) and you should consider them as well. Responsive and willing to guide you properly: This is a big one. You don\u0026rsquo;t want an advisor who\u0026rsquo;s too busy to meet with you or doesn\u0026rsquo;t respond to your emails. And let me be clear, this isn\u0026rsquo;t a slight against any of the faculty members. They\u0026rsquo;re all extremely helpful and knowledgeable. But some of them are just too busy to give you the attention you need. And here is where clear communication with your potential advisor comes in. You need to be upfront about your expectations and ask them about theirs. So the advice I give is to inquire about the advisor’s current project load and typical response times. Supportive of your ideas but also critical when needed: Everyone loves a chill time but you shouldn\u0026rsquo;t try to chill with your FYP. You need someone who can guide you properly and point out the flaws in your project. You need someone who can push you to do better. You need someone who can be your mentor. And you need someone who can be your friend. And you need someone who can be your critic. And you need someone who can be your cheerleader. That was a lot of \u0026ldquo;ands\u0026rdquo; but you get the point. FAST is filled with faculty members who can be all of these things and more. You just need to find the right one for you. Co-Advisor: If possible, consider having a co-advisor. This can help you get different perspectives and more support. This is especially useful if you\u0026rsquo;re working on a project that requires expertise in multiple domains. For example, if you\u0026rsquo;re working on a project that involves both AI and Web Development, you might want to consider having an AI expert as your primary advisor and a Web Development expert as your co-advisor. This way, you get the best of both worlds. External Advisor: If you can get an external advisor, that\u0026rsquo;s even better. Don\u0026rsquo;t know where to find them? Your contact should be your team leads or managers at the companies you interned at. If you build a trustworthy and professional relationship with them, they might be willing to help you out. They can provide you with real-world insights and help you align your project with industry needs. They can also help you with your job search after graduation. So if you\u0026rsquo;re smart, it always comes down to networking and building relationships. If you provide value to others, they\u0026rsquo;ll reciprocate (mostly). How to find one?\nCheck faculty profiles and see their published work. Ask seniors about their experiences with different advisors. This is the most important one. Seniors can give you the best advice on who to choose as your advisor. They\u0026rsquo;ve been through the process and they know who\u0026rsquo;s good and who\u0026rsquo;s not. But still, they can be biased towards or against certain faculty members so take their advice with a grain of salt. Maybe the advisor who was too strict for them is the perfect fit for you. Approach multiple advisors with a short, well-prepared proposal. Get a printed copy, please. It\u0026rsquo;s a small thing but it shows that you\u0026rsquo;re serious about your project. And it\u0026rsquo;s a good habit to get into. You should always have a printed copy of your proposal, your project plan, your project report, your project presentation, your project defence, your project\u0026hellip; you get the point. Choosing the Right Tech Stack Your tech stack should be practical and aligned with your project\u0026rsquo;s scope. Consider:\nIndustry Demand: Is the tech widely used (e.g., Python, React, Django)? Community Support and Libraries: Are there resources available for learning and troubleshooting? Don\u0026rsquo;t pick an obscure tool where you\u0026rsquo;re stuck bashing your head against a wall because there\u0026rsquo;s no documentation. You want to pick a tool that has a large community behind it. That way, if you run into any issues, you can just Google it and you\u0026rsquo;ll find a solution. Scalability: Can your tech handle future growth? Let me be clear, not all projects need to be scalable. If you\u0026rsquo;re building a project that\u0026rsquo;s meant to be used by a small group of people, scalability might not be a concern for you. But if you\u0026rsquo;re building a project that\u0026rsquo;s meant to be used by a large group of people, scalability should be one of your top concerns. So please don\u0026rsquo;t over-engineer or under-engineer your project. I have a habit of designing projects (even hobby ones) that can scale to thousands of users. But that\u0026rsquo;s not always necessary. Learning Curve: Will you have time to master it? FASTians are built different. They can learn anything in a short amount of time. But that doesn\u0026rsquo;t mean you should try to learn everything. You should stick to what you know and what you can learn in a reasonable amount of time. You don\u0026rsquo;t want to be learning a new language or framework in the middle of your project. Imagine flying a plane with your right while holding the manual on your left. However, if you have some time before your FYP starts, you can use that time to learn a new language or framework. Example Tech Stacks:\nWeb Apps: Vue.js / Django / PostgreSQL. I love this stack. It\u0026rsquo;s simple, it\u0026rsquo;s powerful, and it\u0026rsquo;s easy to learn. AI/ML: Python (TensorFlow, PyTorch) + Flask / FastAPI Mobile Apps: Kotlin / Swift. I prefer native apps as compared to hybrid apps. But that\u0026rsquo;s just me. You might prefer hybrid apps and that\u0026rsquo;s perfectly fine. I want to squeeze every bit of performance out of my apps. But you might not care about that. Tip: Stick to technologies you are comfortable with or have enough time to learn.\nCan an FYP Help with Employment and Master\u0026rsquo;s Admissions? Absolutely! A well-executed FYP can:\nImpress recruiters: Companies prefer candidates who have built real-world projects that they can check out. Boost your resume \u0026amp; portfolio: Especially if it’s on GitHub with good documentation. code quality, a working demo, and a good commit history. Support your Master\u0026rsquo;s application: A strong project with a research component can help in admissions and scholarships. Tip: Try to publish a paper or present your project in a competition for extra credibility.\nHow to Write a Strong Proposal A solid proposal increases your chances of approval and sets a clear roadmap for your project. It should include:\nProject Title: Clear and concise. Problem Statement: What issue are you solving? Be specific about the challenges or gaps your project aims to address. Objectives: Define clear, measurable goals. Instead of vague aims like \u0026ldquo;I want to build a website,\u0026rdquo; specify \u0026ldquo;I want to build a website that allows users to register, search, and interact with community content.\u0026rdquo; Tech Stack: Justify your choice of tools. Explain why you selected one database over another, a specific language, or a particular framework. This demonstrates that you\u0026rsquo;ve thoroughly researched the technical needs of your project. Expected Outcomes: Describe the anticipated impact of your project. What problems will it solve, and how will it benefit users or contribute to your field? Methodology: Outline your approach—whether it’s a research-driven study, iterative software development, or an experimental design. This helps clarify how you\u0026rsquo;ll achieve your objectives. Literature Review: Provide a brief overview of existing work or research related to your topic. This not only justifies the novelty of your project but also shows that you’re building on a solid foundation. Timeline \u0026amp; Milestones: Include a realistic timeline with specific milestones. Breaking down your project into phases demonstrates that you have a clear plan for completing your work on schedule. Risk Management \u0026amp; Contingency Plans: Identify potential challenges and outline strategies to address them. Whether it’s technical hurdles or resource constraints, showing that you’ve thought ahead will impress evaluators. Resource \u0026amp; Budget Considerations (if applicable): Detail any additional resources or funding you may require, such as software licenses, hardware, or access to special datasets. Tip: Avoid overly ambitious goals—keep your proposal realistic and achievable. Remember, \u0026ldquo;Underpromise and overdeliver\u0026rdquo; is a solid strategy, but overpromising what you can achieve may lead to unnecessary stress and setbacks.\nProject Management Best Practices Managing your project efficiently ensures smooth progress.\nUse Agile/Scrum: Break work into small, manageable tasks. Version Control: Use Git/GitHub for tracking changes. For the love of all that\u0026rsquo;s holy, don\u0026rsquo;t send each other code files over WhatsApp. Use Git. It\u0026rsquo;s not that hard to learn and it will save you a lot of time and effort. Task Management: Use Trello, Notion, or Jira for planning. You can mostly get away with using Trello. It\u0026rsquo;s simple, it\u0026rsquo;s easy to use, and it\u0026rsquo;s free. But if you want more features, you can use Notion or Jira. Code Documentation: Write clean, well-commented code for maintainability. Look into the tools that can help you with this. For example, you can use JSDoc for JavaScript, Sphinx for Python, and Doxygen for C++. Usecase-based development: Develop your project based on the use cases divided amongst each member. Don\u0026rsquo;t commit the cardinal sin of assigning a whole layer to a single member (my X member did the frontend). This is a recipe for disaster. Tip: Meet with your team/advisor weekly to track progress.\nTesting \u0026amp; Deployment Strategies Testing is often overlooked but is critical to ensuring your project’s success. Implement a comprehensive testing strategy that includes:\nUnit Testing: Test individual components to ensure they work as expected. Integration Testing: Verify that different modules interact correctly. Performance Testing: Assess scalability and speed; explore techniques like skeleton and lazy loading for optimization. Security Testing: Ensure your application is robust against vulnerabilities, especially if it handles sensitive data. Usability Testing: Gather user feedback to ensure the project is intuitive and user-friendly. For deployment:\nReliable Platforms: Choose trusted platforms like AWS, Firebase, Heroku, or DigitalOcean. For a more hands-on approach, consider setting up your own VPS. Automated Testing \u0026amp; Deployment: Leverage CI/CD pipelines to automate the testing and deployment process. This reduces manual errors and ensures consistent releases. Backup \u0026amp; Rollback Plans: Always have contingency measures in place. In case of deployment issues, a well-documented rollback plan can save valuable time and prevent data loss. Tip: Document any issues encountered during testing and deployment, and note how you resolved them. This documentation can be invaluable during your project defence and for future projects.\nPreparing for Your FYP Defense Your FYP defence is where you showcase your hard work. A great presentation includes:\nClear Project Demo: Focus on the key features and functionality of your project. Prepare backup materials like screenshots or a recorded demo in case of technical glitches. Performance Insights: Present efficiency improvements, benchmarking data, or any performance metrics that validate your project’s success. Comprehensive Understanding: Ensure every team member is well-versed in all aspects of the project. This prepares you for both technical and theoretical questions from the panel. Presentation Design \u0026amp; Narrative: Craft a clear, concise, and visually engaging presentation. A strong narrative that explains the problem, your approach, and the impact of your project can make a lasting impression. Handling Q\u0026amp;A: Anticipate common questions and practice your responses. Prepare to discuss challenges, lessons learned, and possible future enhancements. Tip: Practice your defense multiple times before presenting. This practice will help you remain calm and confident, even when facing unexpected questions. Make sure all the members know all the details of the project. You don\u0026rsquo;t want to be caught off guard by a question you should know the answer to.\nCompany Sponsorships and Mentorship Programs Looking beyond traditional academic support can add a real-world edge to your FYP. Consider these strategies:\nInternship Sponsorship: If you\u0026rsquo;ve interned at a company, approach them with your project proposal. They might be interested in sponsoring your project, providing financial support and ensuring your work aligns with industry needs. This is how it worked for me and how I got my external advisor. Professor Connections: Many professors have strong links with software houses. Occasionally, they secure projects from these companies that can be developed as part of a student\u0026rsquo;s FYP. It\u0026rsquo;s worth asking your advisor if such opportunities exist. Industry Mentorship Programs: In Pakistan, several software houses now run FYP mentorship programs. These initiatives connect students with experienced industry professionals who can offer guidance, technical insights, and real-world perspectives throughout the project. LinkedIn Networking: Reach out to professionals in your field on LinkedIn. Many are willing to mentor students and provide valuable advice on project development, tech stack selection, and career opportunities. This way, even if you can\u0026rsquo;t become a part of a mentorship program, you can still get the benefits of having a mentor. Many professionals are willing to help students. You just need to ask. Tip: Leverage your network and inquire with both your past internship supervisors and professors about these opportunities—they could open doors to valuable industry partnerships.\nConclusion Your FYP is more than just an academic requirement—it’s a launchpad for your career.\nChoose the right topic and tech stack. Work with a supportive advisor. Follow best coding \u0026amp; project management practices. Use it to boost your resume and career prospects. Final Tip: Start early, be consistent, and seek feedback from peers and advisors.\nI hope this guide helps you navigate your Final Year Project with confidence. If you have questions, feel free to reach out or leave a comment!\n","permalink":"https://mhassan.dev/blog/fyp-guidance/","summary":"\u003cdiv style=\"text-align: justify;\"\u003e\n\u003ch2 id=\"introduction\"\u003e\u003cspan style=\"color:#FFB4A2\"\u003eIntroduction\u003c/span\u003e\u003c/h2\u003e\n\u003cdiv style=\"text-align: justify;\"\u003e\nThe fact that you have decided to read this behemoth of an article deserves admiration and tells me that you're serious about your academics and career (or are procrastinating on something else). Give me the next 20 mins of your life and I'll make you into a much more informed individual. Your \u003cstrong\u003eFinal Year Project (FYP)\u003c/strong\u003e is one of the most important academic tasks in your degree. It can shape your future career, boost your portfolio, and improve your problem-solving skills.  \nThis guide will help you \u003cstrong\u003echoose the right topic, advisor, tech stack, and strategy\u003c/strong\u003e to ensure your FYP stands out. This guide is mainly targets FASTians because of my experience, but the advice can be applied to any university. Also, I claim to be no expert in this field. I'm just a student who's been through the process and wants to help others navigate it. So take my very opinionated advice with a grain of salt.\n\u003c/div\u003e\n\u003chr\u003e\n\u003ch2 id=\"research--development-vs-development\"\u003e\u003cspan style=\"color:#FFB4A2\"\u003eResearch \u0026amp; Development vs. Development\u003c/span\u003e\u003c/h2\u003e\n\u003cp\u003eWhen planning your FYP, it’s essential to decide which type of project best aligns with your interests, skills, and career goals. Generally, there are two broad categories:\u003c/p\u003e","title":"Final Year Project (FYP) Guide for Students"},{"content":"Introduction As my POS system scaled, performance bottlenecks became increasingly apparent. Customers began complaining about slow bill generation times, which made checkout frustratingly sluggish. After profiling my Django APIs, I discovered that inefficient ORM queries were causing unnecessary database overhead, leading to significant slowdowns. This prompted a deep dive into ORM optimizations to reduce query execution time and improve the overall user experience.\nIn this post, I\u0026rsquo;ll share how I optimized my Django ORM queries using select_related, prefetch_related, bulk operations, and query profiling tools to enhance the efficiency of my refund API and bill generation process.\nThe N+1 Query Problem and Its Impact One major issue I faced was the N+1 query problem, which happens when querying related objects in a loop, leading to excessive database hits.\nFor example, in my refund API:\nfor item_data in refund_items_data: bill_item = BillItem.objects.get(id=item_data[\u0026#34;bill_item_id\u0026#34;]) product = bill_item.product # This triggers a separate query each time Since each iteration fetched a related product separately, it resulted in multiple queries—one for each bill_item. When processing large refunds, this approach led to severe slowdowns.\nSolution: Using select_related for ForeignKey Joins Replacing individual lookups with select_related drastically reduced query counts by using SQL joins to fetch related data in a single query:\nfor item_data in refund_items_data: bill_item = BillItem.objects.select_related(\u0026#39;product\u0026#39;).get(id=item_data[\u0026#34;bill_item_id\u0026#34;]) product = bill_item.product # Now fetched in the same query This improved performance by minimizing redundant database hits.\nOptimizing Many-to-Many Queries with prefetch_related Another issue arose when fetching refund items along with related bill_items and products. Since Django’s ORM performs multiple queries for Many-to-Many relationships, prefetch_related was a better choice than select_related.\nrefund_items = RefundItem.objects.prefetch_related(\u0026#39;bill_item__product\u0026#39;).filter(refund=refund) This preloads related objects efficiently, reducing database queries and improving response times.\nWhen to Use Raw SQL vs. Django ORM Django ORM is powerful, but sometimes raw SQL is necessary for complex aggregations. For instance, if I needed to sum refunded amounts efficiently, a raw SQL query would outperform multiple ORM calls:\nfrom django.db import connection def get_total_refunded_amount(refund_id): with connection.cursor() as cursor: cursor.execute(\u0026#34;\u0026#34;\u0026#34; SELECT SUM(refunded_amount) FROM refund_item WHERE refund_id = %s \u0026#34;\u0026#34;\u0026#34;, [refund_id]) return cursor.fetchone()[0] This direct approach was faster than filtering and aggregating with Django ORM in certain scenarios.\nEfficient Bulk Inserts and Updates Handling refunds involved updating multiple products at once. Initially, I updated each product inside a loop, leading to excessive database writes:\nfor product in products_to_update: product.save() Switching to bulk_update allowed batch updates, significantly improving performance:\nProduct.objects.bulk_update(products_to_update, [\u0026#34;quantity_units\u0026#34;, \u0026#34;quantity_subunits\u0026#34;]) Similarly, bulk_create was useful for inserting multiple refund items efficiently:\nRefundItem.objects.bulk_create(refund_items) Profiling Queries with Django Debug Toolbar and Silk To identify bottlenecks, I used Django Debug Toolbar and Silk:\nDjango Debug Toolbar\nInstalled via: pip install django-debug-toolbar Added to INSTALLED_APPS and middleware, it revealed query counts and execution times. Silk\nInstalled via: pip install django-silk Enabled query logging, helping me pinpoint slow database operations. These tools were invaluable in detecting inefficient queries and refining my ORM usage.\nResults and Performance Gains After implementing these optimizations, the refund API saw a 70% reduction in query execution time, significantly improving bill generation speed. Customers immediately noticed smoother transactions, and complaints about slow processing vanished.\nConclusion Optimizing Django ORM queries is crucial for scaling large applications. By leveraging select_related, prefetch_related, bulk operations, and profiling tools, I was able to fine-tune my APIs for high performance. If you\u0026rsquo;re experiencing slow database operations, consider these strategies to improve efficiency and responsiveness in your Django projects. These techniques ended up saving my business from potential losses (customer were fuming a little ngl) due to poor user experience, and I\u0026rsquo;m confident they can help you too.\n","permalink":"https://mhassan.dev/blog/django-orm-optimizaitons/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eAs my POS system scaled, performance bottlenecks became increasingly apparent. Customers began complaining about slow bill generation times, which made checkout frustratingly sluggish. After profiling my Django APIs, I discovered that inefficient ORM queries were causing unnecessary database overhead, leading to significant slowdowns. This prompted a deep dive into ORM optimizations to reduce query execution time and improve the overall user experience.\u003c/p\u003e\n\u003cp\u003eIn this post, I\u0026rsquo;ll share how I optimized my Django ORM queries using \u003ccode\u003eselect_related\u003c/code\u003e, \u003ccode\u003eprefetch_related\u003c/code\u003e, bulk operations, and query profiling tools to enhance the efficiency of my refund API and bill generation process.\u003c/p\u003e","title":"Optimizing Django ORM Queries for Large Applications"},{"content":"Introduction During my university coursework, I developed a C++-based grayscale image editor capable of performing fundamental image processing tasks. This project was an exploration into file handling, image manipulation, and efficient data structures in C++.\nFeatures of the Image Editor The application supports:\nLoading and saving grayscale images in PGM format. Applying filters like mean and median filtering. Performing transformations such as flipping, rotating, and resizing. Combining images either side-by-side or top-to-bottom. Adjusting brightness and generating negative images. Core Implementation The backbone of the editor is the grayImage struct, which stores pixel data and provides functions for image operations. Here’s a snippet demonstrating how pixels are set and retrieved:\nunsigned short setPixel(unsigned short value, int r, int c) { if (r \u0026gt;= Rows || c \u0026gt;= Cols || r \u0026lt; 0 || c \u0026lt; 0) { return -1; } Image[r][c] = value; return value; } int getPixel(int r, int c) { if (r \u0026gt;= Rows || c \u0026gt;= Cols || r \u0026lt; 0 || c \u0026lt; 0) { return -1; } return Image[r][c]; } Loading and Saving Images The editor reads and writes images in PGM format. The load() and Save() functions handle file I/O:\nint load(string File_Name) { ifstream Input(File_Name.c_str()); if (!Input) { return 1; } string MagicNumber, comment; int columns, rows, MaxValue, currentValue; getline(Input, MagicNumber); getline(Input, comment); Input \u0026gt;\u0026gt; columns \u0026gt;\u0026gt; rows \u0026gt;\u0026gt; MaxValue; setRows(rows); setCols(columns); Maximum = MaxValue; for (int i = 0; i \u0026lt; Rows; i++) { for (int j = 0; j \u0026lt; Cols; j++) { Input \u0026gt;\u0026gt; currentValue; Image[i][j] = currentValue; } } Input.close(); Loaded = true; return 0; } Applying a Negative Filter One of the simplest transformations in image processing is creating a negative image, achieved using:\nvoid Negative(grayImage\u0026amp; Result) { for (int row = 0; row \u0026lt; Rows; row++) { for (int column = 0; column \u0026lt; Cols; column++) { Result.Image[row][column] = Maximum - Image[row][column]; } } Result.Rows = Rows; Result.Cols = Cols; Result.Maximum = Maximum; } Future Improvements While this project successfully implements several essential image processing functions, future improvements could include:\nAdding support for colored images (PPM format). Implementing more advanced filters (e.g., Gaussian blur, edge detection). Providing a GUI using a library like Qt or OpenCV. Conclusion This C++ image editor was a great learning experience in working with image data, file I/O, and algorithm optimization. It’s a stepping stone towards more advanced image processing applications.\nCheck out the full source code on my GitHub!\nHave feedback or suggestions? Drop a comment below!\n","permalink":"https://mhassan.dev/projects/pgm-editor/","summary":"\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eDuring my university coursework, I developed a C++-based grayscale image editor capable of performing fundamental image processing tasks. This project was an exploration into file handling, image manipulation, and efficient data structures in C++.\u003c/p\u003e\n\u003ch3 id=\"features-of-the-image-editor\"\u003eFeatures of the Image Editor\u003c/h3\u003e\n\u003cp\u003eThe application supports:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eLoading and saving grayscale images in PGM format.\u003c/li\u003e\n\u003cli\u003eApplying filters like mean and median filtering.\u003c/li\u003e\n\u003cli\u003ePerforming transformations such as flipping, rotating, and resizing.\u003c/li\u003e\n\u003cli\u003eCombining images either side-by-side or top-to-bottom.\u003c/li\u003e\n\u003cli\u003eAdjusting brightness and generating negative images.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"core-implementation\"\u003eCore Implementation\u003c/h3\u003e\n\u003cp\u003eThe backbone of the editor is the \u003ccode\u003egrayImage\u003c/code\u003e struct, which stores pixel data and provides functions for image operations. Here’s a snippet demonstrating how pixels are set and retrieved:\u003c/p\u003e","title":"Building a C++ Image Editor"},{"content":"Obfuscating Images with Django \u0026amp; Azure Cloud Storage Introduction For a recent project, I developed a Django-based web application that allows users to obfuscate images by embedding executable files within them. The processed images are then stored securely on Azure Blob Storage. This project blends Django’s powerful templating system with Azure’s cloud storage to offer a unique and secure way of handling sensitive data.\nFeatures Upload images and executable files via a Django form. Embed executables within images using a custom obfuscation technique. Store and retrieve obfuscated images on Azure Blob Storage. Deobfuscate images, extracting the original files. Secure file handling and cloud storage integration. Setting Up Azure Blob Storage in Django We start by configuring Azure Blob Storage in our Django project. Using dotenv, we securely load credentials from an .env file:\nfrom azure.storage.blob import BlobServiceClient from dotenv import load_dotenv import os # Load environment variables load_dotenv() AZURE_CONNECTION_STRING = os.getenv(\u0026#34;AZURE_CONNECTION_STRING\u0026#34;) CONTAINER_NAME = os.getenv(\u0026#34;CONTAINER_NAME\u0026#34;) # Initialize BlobServiceClient BLOB_SERVICE_CLIENT = BlobServiceClient.from_connection_string(AZURE_CONNECTION_STRING) Uploading Files to Azure Blob Storage A helper function to upload files to Azure Blob Storage:\ndef upload_to_azure_blob(file, blob_name): try: container_client = BLOB_SERVICE_CLIENT.get_container_client(CONTAINER_NAME) blob_client = container_client.get_blob_client(blob=blob_name) blob_client.upload_blob(file, overwrite=True) print(f\u0026#34;File {blob_name} uploaded successfully!\u0026#34;) except Exception as e: print(f\u0026#34;Error uploading file: {e}\u0026#34;) Handling File Uploads in Django A Django view to handle user file uploads and obfuscation:\nfrom django.shortcuts import render, redirect from .forms import UploadFileForm def upload_file(request): if request.method == \u0026#34;POST\u0026#34;: form = UploadFileForm(request.POST, request.FILES) if form.is_valid(): image_file = request.FILES.get(\u0026#34;image\u0026#34;) executable_file = request.FILES.get(\u0026#34;executable\u0026#34;) upload_to_azure_blob(image_file, image_file.name) upload_to_azure_blob(executable_file, executable_file.name) obfuscate_images(image_file.name, executable_file.name) else: form = UploadFileForm() return render(request, \u0026#34;core/obfuscator.html\u0026#34;, {\u0026#34;form\u0026#34;: form}) Obfuscating Images We embed the executable file within the image using a delimiter, then upload the modified file back to Azure:\ndef obfuscate_images(image_blob_name, executable_blob_name): try: image_blob_client = BLOB_SERVICE_CLIENT.get_blob_client(CONTAINER_NAME, image_blob_name) executable_blob_client = BLOB_SERVICE_CLIENT.get_blob_client(CONTAINER_NAME, executable_blob_name) image_data = image_blob_client.download_blob().readall() executable_data = executable_blob_client.download_blob().readall() delimiter = b\u0026#34;---EXECUTABLE_BOUNDARY---\u0026#34; obfuscated_data = image_data + delimiter + executable_data obfuscated_blob_name = f\u0026#34;{image_blob_name}_OBFUSCATED.jpg\u0026#34; obfuscated_blob_client = BLOB_SERVICE_CLIENT.get_blob_client(CONTAINER_NAME, obfuscated_blob_name) obfuscated_blob_client.upload_blob(obfuscated_data, overwrite=True) print(f\u0026#34;File {obfuscated_blob_name} obfuscated and uploaded successfully!\u0026#34;) except Exception as e: print(f\u0026#34;Error obfuscating file: {e}\u0026#34;) Deobfuscating Images The function below extracts the original image and executable file from the obfuscated image:\ndef deobfuscate_images(obfuscated_blob_name): try: obfuscated_blob_client = BLOB_SERVICE_CLIENT.get_blob_client(CONTAINER_NAME, obfuscated_blob_name) obfuscated_data = obfuscated_blob_client.download_blob().readall() delimiter = b\u0026#34;---EXECUTABLE_BOUNDARY---\u0026#34; delimiter_index = obfuscated_data.find(delimiter) image_data = obfuscated_data[:delimiter_index] executable_data = obfuscated_data[delimiter_index + len(delimiter) :] image_name, image_extension = obfuscated_blob_name.split(\u0026#34;_OBFUSCATED.\u0026#34;) deobfuscated_image_blob_name = f\u0026#34;{image_name}.{image_extension}\u0026#34; deobfuscated_executable_blob_name = f\u0026#34;{image_name}_EXECUTABLE.exe\u0026#34; deobfuscated_image_blob_client = BLOB_SERVICE_CLIENT.get_blob_client(CONTAINER_NAME, deobfuscated_image_blob_name) deobfuscated_executable_blob_client = BLOB_SERVICE_CLIENT.get_blob_client(CONTAINER_NAME, deobfuscated_executable_blob_name) deobfuscated_image_blob_client.upload_blob(image_data, overwrite=True) deobfuscated_executable_blob_client.upload_blob(executable_data, overwrite=True) print(f\u0026#34;Deobfuscated files uploaded successfully!\u0026#34;) return image_data, executable_data except Exception as e: print(f\u0026#34;Error deobfuscating file: {e}\u0026#34;) Future Enhancements Adding user authentication to restrict access to uploaded files. Implementing additional security measures, such as file encryption. Developing a frontend UI with Django templates and JavaScript for a seamless user experience. Enhancing storage management with Azure lifecycle policies. Conclusion This project showcases how Django and Azure Blob Storage can be leveraged to create a secure and efficient image obfuscation system. By embedding executables within images, we can transmit sensitive data in a unique and obscured format while utilizing the power of cloud storage.\nCheck out the full source code on my GitHub!\nGot feedback or suggestions? Drop a comment below!\n","permalink":"https://mhassan.dev/projects/pixelcryptor/","summary":"\u003ch2 id=\"obfuscating-images-with-django--azure-cloud-storage\"\u003eObfuscating Images with Django \u0026amp; Azure Cloud Storage\u003c/h2\u003e\n\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eFor a recent project, I developed a Django-based web application that allows users to obfuscate images by embedding executable files within them. The processed images are then stored securely on Azure Blob Storage. This project blends Django’s powerful templating system with Azure’s cloud storage to offer a unique and secure way of handling sensitive data.\u003c/p\u003e\n\u003ch3 id=\"features\"\u003eFeatures\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eUpload images and executable files via a Django form.\u003c/li\u003e\n\u003cli\u003eEmbed executables within images using a custom obfuscation technique.\u003c/li\u003e\n\u003cli\u003eStore and retrieve obfuscated images on Azure Blob Storage.\u003c/li\u003e\n\u003cli\u003eDeobfuscate images, extracting the original files.\u003c/li\u003e\n\u003cli\u003eSecure file handling and cloud storage integration.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"setting-up-azure-blob-storage-in-django\"\u003eSetting Up Azure Blob Storage in Django\u003c/h3\u003e\n\u003cp\u003eWe start by configuring Azure Blob Storage in our Django project. Using \u003ccode\u003edotenv\u003c/code\u003e, we securely load credentials from an \u003ccode\u003e.env\u003c/code\u003e file:\u003c/p\u003e","title":"Obfuscating Images with Django \u0026 Azure Cloud Storage"},{"content":"Building a Smart Dustbin with IoT Introduction This project involves the development of a Smart Dustbin using Arduino, Python, Kotlin (Android App), and Azure IoT to monitor and manage waste levels in real-time. By integrating sensors, cloud computing, and mobile applications, this system enhances waste management efficiency.\nComponents \u0026amp; Technologies Used Arduino Uno \u0026amp; ESP8266 WiFi Module for sensor data collection. Ultrasonic Sensors to measure garbage levels. Servo Motor to control the bin lid. Python \u0026amp; Tkinter GUI for real-time monitoring. Kotlin Android App for mobile notifications. ThingSpeak \u0026amp; Azure IoT Hub for cloud-based monitoring. Hardware Implementation Arduino Code for Garbage Level Detection \u0026amp; Smart Lid Control The Arduino Uno, paired with an HC-SR04 ultrasonic sensor, measures the bin’s fill level. The servo motor automatically opens the lid when an object is detected nearby.\n#include \u0026lt;Servo.h\u0026gt; Servo s1; const int trigPin = 7; const int echoPin = 8; const int doorTrigPin = 11; const int doorEchoPin = 12; const int MAX_CAPACITY_CM = 22; const int DOOR_DISTANCE_THRESHOLD = 10; void setup() { Serial.begin(9600); pinMode(trigPin, OUTPUT); pinMode(echoPin, INPUT); pinMode(doorTrigPin, OUTPUT); pinMode(doorEchoPin, INPUT); s1.attach(10); } void loop() { long duration, cm; digitalWrite(trigPin, LOW); delayMicroseconds(2); digitalWrite(trigPin, HIGH); delayMicroseconds(10); digitalWrite(trigPin, LOW); duration = pulseIn(echoPin, HIGH); cm = duration / 29 / 2; Serial.println(cm); delay(100); } WiFi Connectivity with ESP8266 The ESP8266 module enables real-time data transmission to a laptop or cloud.\n#include \u0026lt;ESP8266WiFi.h\u0026gt; const char* ssid = \u0026#34;wifi_name\u0026#34;; const char* password = \u0026#34;12345678\u0026#34;; const char* serverIP = \u0026#34;laptop_wifi_adapter_IP\u0026#34;; const int serverPort = 1234; WiFiClient client; void setup() { Serial.begin(9600); WiFi.begin(ssid, password); } void loop() { if (Serial.available() \u0026gt; 0) { int distance = Serial.parseInt(); if (distance \u0026gt;= 0 \u0026amp;\u0026amp; distance \u0026lt;= 400) { sendToLaptop(distance); } } } void sendToLaptop(int distance) { if (!client.connected()) { if (!client.connect(serverIP, serverPort)) return; } client.println(distance); } Cloud Integration with ThingSpeak \u0026amp; Azure IoT Hub Sending Data to ThingSpeak Data is published to ThingSpeak via MQTT.\ndef send_to_thingspeak(data): topic = \u0026#34;channels/\u0026#34; + CHANNEL_ID + \u0026#34;/publish\u0026#34; payload = \u0026#34;field1=\u0026#34; + str(data) publish.single(topic, payload, hostname=MQTT_HOST, auth={\u0026#34;username\u0026#34;: MQTT_USERNAME, \u0026#34;password\u0026#34;: MQTT_PASSWORD}) Sending Data to Azure IoT Hub For scalable IoT integration, data is sent to Azure IoT Hub.\nfrom azure.iot.device.aio import IoTHubDeviceClient async def send_to_azure_iot_hub(data): device_client = IoTHubDeviceClient.create_from_connection_string(CONNECTION_STRING) await device_client.connect() await device_client.send_message(data) await device_client.disconnect() GUI for Real-Time Monitoring Tkinter-based Desktop App A Python Tkinter application provides a user-friendly interface to monitor bin levels.\nimport tkinter as tk root = tk.Tk() root.title(\u0026#34;Garbage Level Monitoring\u0026#34;) garbage_label = tk.Label(root, text=\u0026#34;Garbage Level: 0%\u0026#34;) garbage_label.pack() root.mainloop() Android App Development (Kotlin) The Kotlin-based Android app receives real-time bin status and sends notifications when the bin is full.\nfun checkGarbageLevel(level: Int) { if (level \u0026gt; 80) { Toast.makeText(this, \u0026#34;Garbage bin almost full!\u0026#34;, Toast.LENGTH_LONG).show() } } Future Enhancements AI-based Smart Sorting: Automatic waste segregation. Solar-Powered Bin: Sustainable energy source. GPS-enabled Tracking: Optimize garbage collection routes. Conclusion This smart dustbin project showcases the power of IoT, cloud computing, and mobile app integration in waste management. By leveraging Arduino, Python, Kotlin, and Azure IoT, we enhance urban sustainability.\nCheck out the full project on GitHub at Here, Here, and Here!\n","permalink":"https://mhassan.dev/projects/iot-garbage-monitoring/","summary":"\u003ch2 id=\"building-a-smart-dustbin-with-iot\"\u003eBuilding a Smart Dustbin with IoT\u003c/h2\u003e\n\u003ch3 id=\"introduction\"\u003eIntroduction\u003c/h3\u003e\n\u003cp\u003eThis project involves the development of a \u003cstrong\u003eSmart Dustbin\u003c/strong\u003e using \u003cstrong\u003eArduino, Python, Kotlin (Android App), and Azure IoT\u003c/strong\u003e to monitor and manage waste levels in real-time. By integrating sensors, cloud computing, and mobile applications, this system enhances waste management efficiency.\u003c/p\u003e\n\u003ch3 id=\"components--technologies-used\"\u003eComponents \u0026amp; Technologies Used\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eArduino Uno \u0026amp; ESP8266 WiFi Module\u003c/strong\u003e for sensor data collection.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eUltrasonic Sensors\u003c/strong\u003e to measure garbage levels.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eServo Motor\u003c/strong\u003e to control the bin lid.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePython \u0026amp; Tkinter GUI\u003c/strong\u003e for real-time monitoring.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eKotlin Android App\u003c/strong\u003e for mobile notifications.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eThingSpeak \u0026amp; Azure IoT Hub\u003c/strong\u003e for cloud-based monitoring.\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"hardware-implementation\"\u003eHardware Implementation\u003c/h2\u003e\n\u003ch3 id=\"arduino-code-for-garbage-level-detection--smart-lid-control\"\u003eArduino Code for Garbage Level Detection \u0026amp; Smart Lid Control\u003c/h3\u003e\n\u003cp\u003eThe Arduino Uno, paired with an \u003cstrong\u003eHC-SR04 ultrasonic sensor\u003c/strong\u003e, measures the bin’s fill level. The \u003cstrong\u003eservo motor\u003c/strong\u003e automatically opens the lid when an object is detected nearby.\u003c/p\u003e","title":"Smart Dustbin with IoT: Arduino, Python, Kotlin \u0026 Azure"},{"content":" The Sole Spokesman: Jinnah, the Muslim League, and the Demand for Pakistan Author: Ayesha Jalal\nA penetrating analysis of the role of a singular spokesperson in shaping public discourse. Examines Jinnah’s influence through political rhetoric and media engagement. The Making of Pakistan: A Study in Nationalism Author: K.K. Aziz\nA fascinating exploration of Pakistan’s creation filled with historical insights, newspaper excerpts, and personal interviews. Delivers nuanced perspectives on identity and nation‐building. ","permalink":"https://mhassan.dev/books/books-pakistan/","summary":"\u003cdiv class=\"book-container\"\u003e\n\u003ch3 id=\"the-sole-spokesman-jinnah-the-muslim-league-and-the-demand-for-pakistan\"\u003e\u003cspan class=\"book-subtitle\"\u003eThe Sole Spokesman: Jinnah, the Muslim League, and the Demand for Pakistan\u003c/span\u003e\u003c/h3\u003e\n\u003cdiv class=\"book-cover\"\u003e\n  \u003cimg src=\"/assets/sole.webp\" alt=\"The Sole Spokesman Cover\" width=\"200\" height=\"300\"\u003e\n\u003c/div\u003e\n\u003cp class=\"author\"\u003eAuthor: Ayesha Jalal\u003c/p\u003e\n\u003cblockquote class=\"review\"\u003e\nA penetrating analysis of the role of a singular spokesperson in shaping public discourse. Examines Jinnah’s influence through political rhetoric and media engagement.\n\u003c/blockquote\u003e\n\u003ch3 id=\"the-making-of-pakistan-a-study-in-nationalism\"\u003e\u003cspan class=\"book-subtitle\"\u003eThe Making of Pakistan: A Study in Nationalism\u003c/span\u003e\u003c/h3\u003e\n\u003cdiv class=\"book-cover\"\u003e\n  \u003cimg src=\"/assets/makingofpakistan.webp\" alt=\"The Making of Pakistan Cover\" width=\"200\" height=\"300\"\u003e\n\u003c/div\u003e\n\u003cp class=\"author\"\u003eAuthor: K.K. Aziz\u003c/p\u003e\n\u003cblockquote class=\"review\"\u003e\nA fascinating exploration of Pakistan’s creation filled with historical insights, newspaper excerpts, and personal interviews. Delivers nuanced perspectives on identity and nation‐building.\n\u003c/blockquote\u003e\n\u003c/div\u003e","title":"Books on Pakistan"},{"content":" The Brothers Karamazov Author: Fyodor Dostoevsky\nA masterpiece that delves deep into human nature, morality, and faith. Features profound philosophical debates and unforgettable characters. The Sword of Kaigen Author: M.L. Wang\nA gripping tale of family, honor, and magic set in a war-torn world. Combines intense battle scenes with heartfelt familial bonds. The Will of the Many Author: James Islington\nAn epic blend of political intrigue and high fantasy that leaves you craving more—need part 2 yesterday. Mistborn Saga: Complete Trilogy Author: Brandon Sanderson\nPeak fiction right here. Masterfully blends intricate magic systems with dynamic character arcs—gourmet storytelling at its finest. Angels \u0026amp; Demons Author: Dan Brown\nA riveting adventure pitting ancient secrets against modern science. Fast-paced puzzles and historical enigmas keep you on your toes. 1984 Author: George Orwell\nA chilling dystopian vision of totalitarianism that remains alarmingly relevant. Its prophetic warnings spark ongoing debates about surveillance and freedom. Project Hail Mary Author: Andy Weir\nA thrilling sci-fi adventure that combines humor, heart, and hard science. A space odyssey that challenges the limits of scientific ingenuity and human spirit. ","permalink":"https://mhassan.dev/books/books-fiction/","summary":"\u003cdiv class=\"book-container\"\u003e\n\u003ch3 id=\"the-brothers-karamazov\"\u003e\u003cspan class=\"book-subtitle\"\u003eThe Brothers Karamazov\u003c/span\u003e\u003c/h3\u003e\n\u003cdiv class=\"book-cover\"\u003e\n  \u003cimg src=\"/assets/brotherskaramazov.webp\" alt=\"The Brothers Karamazov Cover\" width=\"200\" height=\"300\"\u003e\n\u003c/div\u003e\n\u003cp class=\"author\"\u003eAuthor: Fyodor Dostoevsky\u003c/p\u003e\n\u003cblockquote class=\"review\"\u003e\nA masterpiece that delves deep into human nature, morality, and faith. Features profound philosophical debates and unforgettable characters.\n\u003c/blockquote\u003e\n\u003ch3 id=\"the-sword-of-kaigen\"\u003e\u003cspan class=\"book-subtitle\"\u003eThe Sword of Kaigen\u003c/span\u003e\u003c/h3\u003e\n\u003cdiv class=\"book-cover\"\u003e\n  \u003cimg src=\"/assets/swordofkaigen.webp\" alt=\"The Sword of Kaigen Cover\" width=\"200\" height=\"300\"\u003e\n\u003c/div\u003e\n\u003cp class=\"author\"\u003eAuthor: M.L. Wang\u003c/p\u003e\n\u003cblockquote class=\"review\"\u003e\nA gripping tale of family, honor, and magic set in a war-torn world. Combines intense battle scenes with heartfelt familial bonds.\n\u003c/blockquote\u003e\n\u003ch3 id=\"the-will-of-the-many\"\u003e\u003cspan class=\"book-subtitle\"\u003eThe Will of the Many\u003c/span\u003e\u003c/h3\u003e\n\u003cdiv class=\"book-cover\"\u003e\n  \u003cimg src=\"/assets/thewillofthemany.webp\" alt=\"The Will of the Many Cover\" width=\"200\" height=\"300\"\u003e\n\u003c/div\u003e\n\u003cp class=\"author\"\u003eAuthor: James Islington\u003c/p\u003e\n\u003cblockquote class=\"review\"\u003e\nAn epic blend of political intrigue and high fantasy that leaves you craving more—need part 2 yesterday.\n\u003c/blockquote\u003e\n\u003ch3 id=\"mistborn-saga-complete-trilogy\"\u003e\u003cspan class=\"book-subtitle\"\u003eMistborn Saga: Complete Trilogy\u003c/span\u003e\u003c/h3\u003e\n\u003cdiv class=\"book-cover\"\u003e\n  \u003cimg src=\"/assets/mistborn.webp\" alt=\"Mistborn Saga Cover\" width=\"200\" height=\"300\"\u003e\n\u003c/div\u003e\n\u003cp class=\"author\"\u003eAuthor: Brandon Sanderson\u003c/p\u003e","title":"Fiction Books"},{"content":" Clash of Civilizations Author: Samuel P. Huntington\nA provocative thesis that reshaped global political discourse in the post–Cold War era. Examines cultural fault lines and their implications for international relations, despite its controversial tone. The Limits of Power Author: Andrew J. Bacevich\nA critical examination of the constraints on national power and the perils of overreach. Uses historical case studies to illustrate the dangers of unchecked military ambition. Grit: The Power of Passion and Perseverance Author: Angela Duckworth\nA groundbreaking exploration of how passion and perseverance drive success. Provides actionable insights on cultivating resilience in both personal and professional spheres. ","permalink":"https://mhassan.dev/books/books-non-fiction/","summary":"\u003cdiv class=\"book-container\"\u003e\n\u003ch3 id=\"clash-of-civilizations\"\u003e\u003cspan class=\"book-subtitle\"\u003eClash of Civilizations\u003c/span\u003e\u003c/h3\u003e\n\u003cdiv class=\"book-cover\"\u003e\n  \u003cimg src=\"/assets/clash.webp\" alt=\"Clash of Civilizations Cover\" width=\"200\" height=\"300\"\u003e\n\u003c/div\u003e\n\u003cp class=\"author\"\u003eAuthor: Samuel P. Huntington\u003c/p\u003e\n\u003cblockquote class=\"review\"\u003e\nA provocative thesis that reshaped global political discourse in the post–Cold War era. Examines cultural fault lines and their implications for international relations, despite its controversial tone.\n\u003c/blockquote\u003e\n\u003ch3 id=\"the-limits-of-power\"\u003e\u003cspan class=\"book-subtitle\"\u003eThe Limits of Power\u003c/span\u003e\u003c/h3\u003e\n\u003cdiv class=\"book-cover\"\u003e\n  \u003cimg src=\"/assets/limitofpower.webp\" alt=\"The Limits of Power Cover\" width=\"200\" height=\"300\"\u003e\n\u003c/div\u003e\n\u003cp class=\"author\"\u003eAuthor: Andrew J. Bacevich\u003c/p\u003e\n\u003cblockquote class=\"review\"\u003e\nA critical examination of the constraints on national power and the perils of overreach. Uses historical case studies to illustrate the dangers of unchecked military ambition.\n\u003c/blockquote\u003e\n\u003ch3 id=\"grit-the-power-of-passion-and-perseverance\"\u003e\u003cspan class=\"book-subtitle\"\u003eGrit: The Power of Passion and Perseverance\u003c/span\u003e\u003c/h3\u003e\n\u003cdiv class=\"book-cover\"\u003e\n  \u003cimg src=\"/assets/gritpower.webp\" alt=\"Grit: The Power of Passion and Perseverance Cover\" width=\"200\" height=\"300\"\u003e\n\u003c/div\u003e\n\u003cp class=\"author\"\u003eAuthor: Angela Duckworth\u003c/p\u003e","title":"Non-Fiction Books"},{"content":" Database Internals: A Deep Dive into How Distributed Data Systems Work Author: Alex Petrov\nA comprehensive guide to the internal workings of distributed data systems. Covers storage engines, replication, and consensus algorithms like Raft and Paxos. A must-read for anyone working with databases. Since I'm big on databases, this was a no-brainer. Designing Data-Intensive Applications Author: Martin Kleppmann\nIt's all about data these days. It's the new elixir of life. Covers OLTP vs. OLAP, distributed databases, caching strategies, event-driven architectures, and stream processing. If you don't understand this stuff, you're missing out. Crafting Interpreters Author: Robert Nystrom\nMost don't care about how their code gets executed, but they should. This book takes you from lexing, parsing, and ASTs to building a full interpreter from scratch. Writing a line that looks like English and making it do things is pure magic. Every programmer should go through that euphoric feeling at least once. Clean Code: A Handbook of Agile Software Craftsmanship Author: Robert C. Martin\nA definitive guide to writing code that is both elegant and maintainable. Talks about meaningful naming, reducing dependencies, writing small functions, and avoiding unnecessary complexity. I will continue to write garbage code though. Design Patterns: Elements of Reusable Object-Oriented Software Authors: Erich Gamma, Richard Helm, Ralph Johnson, and John Vlissides\nThe daddy of all design pattern books. Introduces concepts like Singleton, Factory, Observer, Decorator, and Command patterns, which still dominate software architecture today. If you haven't read this, you’ve definitely used its patterns without realizing it. The Clean Coder: A Code of Conduct for Professional Programmers Author: Robert C. Martin\nA call to professional discipline and ethical behavior. Talks about saying \"no\" when needed, handling deadlines, and taking full responsibility for your work. More than just a book—it's a mindset shift. ","permalink":"https://mhassan.dev/books/books-technical/","summary":"\u003cdiv class=\"book-container\"\u003e\n\u003ch3 id=\"database-internals-a-deep-dive-into-how-distributed-data-systems-work\"\u003e\u003cspan class=\"book-subtitle\"\u003eDatabase Internals: A Deep Dive into How Distributed Data Systems Work\u003c/span\u003e\u003c/h3\u003e\n\u003cdiv class=\"book-cover\"\u003e\n  \u003cimg src=\"/assets/designing-db-internals.webp\" alt=\"Database Internals Cover\" width=\"200\" height=\"300\"\u003e\n\u003c/div\u003e\n\u003cp class=\"author\"\u003eAuthor: Alex Petrov\u003c/p\u003e\n\u003cblockquote class=\"review\"\u003e\nA comprehensive guide to the internal workings of distributed data systems. Covers \u003cstrong\u003estorage engines, replication, and consensus algorithms\u003c/strong\u003e like \u003cstrong\u003eRaft and Paxos\u003c/strong\u003e. A must-read for anyone working with databases. Since I'm big on databases, this was a no-brainer.\n\u003c/blockquote\u003e\n\u003ch3 id=\"designing-data-intensive-applications\"\u003e\u003cspan class=\"book-subtitle\"\u003eDesigning Data-Intensive Applications\u003c/span\u003e\u003c/h3\u003e\n\u003cdiv class=\"book-cover\"\u003e\n  \u003cimg src=\"/assets/designing-data-intensive-applications.webp\" alt=\"Designing Data-Intensive Applications Cover\" width=\"200\" height=\"300\"\u003e\n\u003c/div\u003e\n\u003cp class=\"author\"\u003eAuthor: Martin Kleppmann\u003c/p\u003e\n\u003cblockquote class=\"review\"\u003e\nIt's all about data these days. It's the new \u003cstrong\u003eelixir of life\u003c/strong\u003e. Covers \u003cstrong\u003eOLTP vs. OLAP, distributed databases, caching strategies, event-driven architectures, and stream processing\u003c/strong\u003e. If you don't understand this stuff, you're missing out.\n\u003c/blockquote\u003e\n\u003ch3 id=\"crafting-interpreters\"\u003e\u003cspan class=\"book-subtitle\"\u003eCrafting Interpreters\u003c/span\u003e\u003c/h3\u003e\n\u003cdiv class=\"book-cover\"\u003e\n  \u003cimg src=\"/assets/crafting-interpreters.webp\" alt=\"Crafting Interpreters Cover\" width=\"200\" height=\"300\"\u003e\n\u003c/div\u003e\n\u003cp class=\"author\"\u003eAuthor: Robert Nystrom\u003c/p\u003e","title":"Technical Books"},{"content":"Introduction As a developer, having a portfolio website is crucial for showcasing skills, projects, and expertise. I wanted a fast, minimal, and easily maintainable site, so I chose Hugo with the PaperMod theme. Best of all, I leveraged free tools for deployment, analytics, and discussions. Here’s how I built my portfolio website, hosted on GitHub Pages with a Porkbun domain.\nHugo and PaperMod for a Minimalistic Look Hugo is a blazing-fast static site generator, perfect for a developer portfolio. I picked the PaperMod theme because of its:\nClean and professional design. Lightweight and fast performance. Easy configuration for dark mode, search, and social links. Free Hosting with GitHub Pages I wanted a zero-cost, hassle-free hosting solution, and GitHub Pages was the perfect choice. Here’s what I did:\nCreated a public GitHub repository. Configured a GitHub Actions workflow for automatic deployment. Set the gh-pages branch as the deployment source in GitHub Pages settings. Now, every push to my main branch automatically updates my live website.\nFree Analytics with Umami Google Analytics is powerful, but I preferred something privacy-friendly and lightweight. Umami provides:\nSelf-hosted analytics with no third-party tracking. Simple dashboard with essential metrics. No cookies or GDPR concerns. I set up Umami on a free hosting platform and integrated it with my site by adding the tracking script to head.html in Hugo’s layout.\nFree Comments with Giscus I wanted a distraction-free, GitHub-powered commenting system. Giscus was the perfect choice because:\nIt uses GitHub Discussions, so no extra accounts are needed. It’s ad-free and requires no backend setup. Users can comment with their GitHub accounts, keeping discussions relevant. Setting it up was simple:\nInstalled the Giscus GitHub app on my repository. Added the \u0026lt;script\u0026gt; to my site’s config.toml file. Enabled discussions in my GitHub repository settings. Now, visitors can leave comments using GitHub, and I manage them just like regular issues.\nCustom Domain with Porkbun A great domain adds credibility to a portfolio. I registered mhassan.dev on Porkbun, and here’s why it was a great choice:\nAffordable pricing compared to other registrars. Free WHOIS privacy protection. Easy DNS setup for GitHub Pages. Automatic SSL without extra configuration. After purchasing, I simply updated the CNAME record to point to GitHub Pages, and Porkbun handled the HTTPS setup seamlessly.\nFinal Thoughts Building a portfolio website doesn’t have to be expensive. By using Hugo, GitHub Pages, Giscus, Umami, and Porkbun, I got a fast, professional, and cost-effective site with minimal effort. If you’re planning to build your own, these tools are a great starting point!\nCheck out my portfolio at right here dummy, you\u0026rsquo;re on it already :wink:\n","permalink":"https://mhassan.dev/blog/free-website-hosting/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eAs a developer, having a portfolio website is crucial for showcasing skills, projects, and expertise. I wanted a fast, minimal, and easily maintainable site, so I chose \u003cstrong\u003eHugo\u003c/strong\u003e with the \u003cstrong\u003ePaperMod\u003c/strong\u003e theme. Best of all, I leveraged free tools for deployment, analytics, and discussions. Here’s how I built my portfolio website, hosted on \u003cstrong\u003eGitHub Pages\u003c/strong\u003e with a \u003cstrong\u003ePorkbun\u003c/strong\u003e domain.\u003c/p\u003e\n\u003ch2 id=\"hugo-and-papermod-for-a-minimalistic-look\"\u003eHugo and PaperMod for a Minimalistic Look\u003c/h2\u003e\n\u003cp\u003eHugo is a \u003cstrong\u003eblazing-fast static site generator\u003c/strong\u003e, perfect for a developer portfolio. I picked the \u003cstrong\u003ePaperMod\u003c/strong\u003e theme because of its:\u003c/p\u003e","title":"How I Built My Portfolio Website with Hugo, GitHub Pages, and Free Tools"},{"content":"Introduction When dealing with financial transactions in Django applications, maintaining an accurate ledger is critical. However, inefficient signal handling can lead to performance bottlenecks. In this article, we\u0026rsquo;ll explore an optimized approach to recalculating ledger balances while ensuring minimal database impact.\nThe Problem A typical ledger system requires recalculating balances when transactions are inserted, updated, or deleted. Using Django signals, many implementations trigger redundant recalculations, causing excessive database queries and slowing down the application.\nCommon Issues with Signals: Unnecessary Queries: Each save or delete operation triggers a recalculation, even if no meaningful change occurs. Cascade Effects: Bulk operations lead to multiple redundant recalculations. Performance Overhead: Large transaction volumes cause significant slowdowns. Optimized Approach To address these inefficiencies, we introduce a flag-based recalculation strategy that minimizes unnecessary database interactions.\nStep 1: Adding a Recalculation Flag Instead of recalculating every time a transaction is saved, we introduce a _needs_recalc flag:\nfrom django.db import models from django.db.models.signals import post_save, post_delete from django.dispatch import receiver class Transaction(models.Model): amount = models.DecimalField(max_digits=10, decimal_places=2) ledger = models.ForeignKey(\u0026#39;Ledger\u0026#39;, on_delete=models.CASCADE) def save(self, *args, **kwargs): self.ledger._needs_recalc = True super().save(*args, **kwargs) @receiver(post_delete, sender=Transaction) def mark_ledger_for_recalc(sender, instance, **kwargs): instance.ledger._needs_recalc = True Step 2: Efficient Ledger Recalculation Recalculating balances should only occur when necessary, ideally after all related operations are complete:\nfrom django.db import transaction def recalculate_ledger_balances(): ledgers_to_update = Ledger.objects.filter(_needs_recalc=True) for ledger in ledgers_to_update: ledger.recalculate_balance() ledger._needs_recalc = False ledger.save(update_fields=[\u0026#39;balance\u0026#39;]) Step 3: Using Post-Transaction Hooks Using Django’s on_commit() ensures recalculations only happen after successful transactions:\nfrom django.db.transaction import on_commit @receiver(post_save, sender=Transaction) def trigger_ledger_recalc(sender, instance, **kwargs): on_commit(lambda: recalculate_ledger_balances()) Performance Gains With this approach, we achieve:\nReduced Queries: Recalculation happens once per affected ledger, not per transaction. Better Scalability: Batch updates improve efficiency. Consistent Data: Using on_commit() ensures recalculations only happen after successful writes. Conclusion By intelligently managing recalculations, we significantly improve the performance of our ledger system in Django applications. This approach ensures efficiency without sacrificing data accuracy, making it ideal for high-volume financial applications.\n","permalink":"https://mhassan.dev/blog/using-signals-optimally/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eWhen dealing with financial transactions in Django applications, maintaining an accurate ledger is critical. However, inefficient signal handling can lead to performance bottlenecks. In this article, we\u0026rsquo;ll explore an optimized approach to recalculating ledger balances while ensuring minimal database impact.\u003c/p\u003e\n\u003ch2 id=\"the-problem\"\u003eThe Problem\u003c/h2\u003e\n\u003cp\u003eA typical ledger system requires recalculating balances when transactions are inserted, updated, or deleted. Using Django signals, many implementations trigger redundant recalculations, causing excessive database queries and slowing down the application.\u003c/p\u003e","title":"Optimizing Django Signals for Efficient Ledger Recalculations"},{"content":"DMCA Notice We respect the intellectual property rights of others and expect our users to do the same. If you believe that content on our website infringes your copyright, please follow the procedure outlined below.\nFiling a DMCA Notice To file a notice of claimed infringement, please include the following information:\nIdentification of the copyrighted work you claim has been infringed. Identification of the material on our site that is claimed to be infringing and information reasonably sufficient to locate the material. Contact Information: Your name, mailing address, telephone number, and email address. A statement that you have a good faith belief that the disputed use is not authorized by the copyright owner, its agent, or the law. A statement, under penalty of perjury, that the information in your notice is accurate and that you are authorized to act on behalf of the copyright owner. Your electronic signature. How to Submit Your Notice Send your DMCA notice to the following email address: raihassanraza10@gmail.com. We will review your notice and take appropriate action in accordance with the Digital Millennium Copyright Act.\nCounter-Notification If you believe that your content was removed in error, you may submit a counter-notification. This must include your contact information and a statement under penalty of perjury that you have a good faith belief the content was removed as a result of mistake or misidentification.\nDisclaimer Please note that this DMCA Notice is provided for informational purposes only and does not constitute legal advice. We recommend consulting with a qualified attorney for any legal concerns.\nContact If you have any questions regarding our DMCA policy, please contact us at raihassanraza10@gmail.com.\nPSA: Again, I\u0026rsquo;m just adding this page for the sake of completeness. You should definitely consult with a legal professional to ensure your DMCA policy is compliant with the law. Also, don\u0026rsquo;t steal content. It\u0026rsquo;s not based at all.\n","permalink":"https://mhassan.dev/dmca/","summary":"\u003ch2 id=\"dmca-notice\"\u003eDMCA Notice\u003c/h2\u003e\n\u003cp\u003eWe respect the intellectual property rights of others and expect our users to do the same. If you believe that content on our website infringes your copyright, please follow the procedure outlined below.\u003c/p\u003e\n\u003ch2 id=\"filing-a-dmca-notice\"\u003eFiling a DMCA Notice\u003c/h2\u003e\n\u003cp\u003eTo file a notice of claimed infringement, please include the following information:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eIdentification of the copyrighted work\u003c/strong\u003e you claim has been infringed.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eIdentification of the material\u003c/strong\u003e on our site that is claimed to be infringing and information reasonably sufficient to locate the material.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eContact Information:\u003c/strong\u003e Your name, mailing address, telephone number, and email address.\u003c/li\u003e\n\u003cli\u003eA statement that you have a good faith belief that the disputed use is not authorized by the copyright owner, its agent, or the law.\u003c/li\u003e\n\u003cli\u003eA statement, under penalty of perjury, that the information in your notice is accurate and that you are authorized to act on behalf of the copyright owner.\u003c/li\u003e\n\u003cli\u003eYour electronic signature.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"how-to-submit-your-notice\"\u003eHow to Submit Your Notice\u003c/h2\u003e\n\u003cp\u003eSend your DMCA notice to the following email address: \u003ca href=\"mailto:raihassanraza10@gmail.com\"\u003eraihassanraza10@gmail.com\u003c/a\u003e. We will review your notice and take appropriate action in accordance with the Digital Millennium Copyright Act.\u003c/p\u003e","title":"DMCA Notice"},{"content":"Introduction Your privacy is important to us. This Privacy Policy explains how we collect, use, and safeguard your personal information when you visit our website. By using our site, you consent to the practices described in this policy.\nInformation We Collect Personal Information: We may collect your name, email address, and other contact details when you subscribe to our newsletter or contact us. Usage Data: We automatically collect information about how you interact with our website, including pages visited, time spent on pages, and browser details. How We Use Your Information We use your data to:\nImprove website functionality and user experience. Respond to inquiries and provide customer support. Send periodic updates or newsletters (if you have opted in). Data Protection We implement reasonable security measures to protect your personal information from unauthorized access, disclosure, or alteration. However, no data transmission over the internet is entirely secure, so please exercise caution when sharing sensitive information online.\nThird-Party Disclosure We do not sell or share your personal information with third parties, except as necessary to comply with legal obligations or protect our rights.\nCookies Our website uses cookies to enhance your experience. Cookies help us understand how visitors interact with our site so we can improve its functionality. You can control cookie settings through your browser.\nChanges to This Policy We may update this Privacy Policy periodically. Any changes will be posted on this page with an updated effective date. Please review this policy regularly.\nContact Us If you have any questions or concerns about this Privacy Policy, please contact us at raihassanraza10@gmail.com.\nPSA: I created this page quickly and didn\u0026rsquo;t care much about the content. You should definitely spend more time on your privacy policy tho :D\n","permalink":"https://mhassan.dev/privacy-policy/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eYour privacy is important to us. This Privacy Policy explains how we collect, use, and safeguard your personal information when you visit our website. By using our site, you consent to the practices described in this policy.\u003c/p\u003e\n\u003ch2 id=\"information-we-collect\"\u003eInformation We Collect\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003ePersonal Information:\u003c/strong\u003e We may collect your name, email address, and other contact details when you subscribe to our newsletter or contact us.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eUsage Data:\u003c/strong\u003e We automatically collect information about how you interact with our website, including pages visited, time spent on pages, and browser details.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"how-we-use-your-information\"\u003eHow We Use Your Information\u003c/h2\u003e\n\u003cp\u003eWe use your data to:\u003c/p\u003e","title":"Privacy Policy"},{"content":"Introduction In modern web development, especially with frameworks like VueJS, building reusable components is a best practice that significantly improves both development efficiency and user experience. When dealing with critical actions—such as password changes, data deletions, or any irreversible actions—maintaining consistency is key. Reusable components, like confirmation modals or standardized buttons, ensure that users have a predictable and secure interaction every time.\nBenefits of Reusable Components Reusable components offer several significant advantages:\nConsistency:\nStandardized UI elements, such as confirmation modals or password prompts, ensure that users are always presented with familiar interfaces when performing critical actions. This consistency reduces confusion and builds trust in your application.\nMaintainability:\nWhen a component is reused across multiple parts of an application, any necessary updates or bug fixes need to be implemented only once. This centralization simplifies maintenance and helps avoid discrepancies in the user experience.\nImproved Development Speed:\nOnce a reusable component is created, it can be easily integrated wherever needed. This reduces code duplication and speeds up the development process, allowing you to focus on new features rather than rewriting similar functionality.\nEnhanced Testing:\nWith a single, well-tested component in use throughout your application, you can be confident that critical user interactions work reliably every time, reducing the potential for errors.\nReusable Components in VueJS VueJS\u0026rsquo;s component-based architecture makes it ideal for creating modular, reusable UI elements. Consider the following example of a confirmation modal component:\nConfirmation Modal Component Example This component can be used anywhere you need to confirm a critical action. It accepts customizable properties for the title and message and emits events based on the user\u0026rsquo;s choice.\n\u0026lt;template\u0026gt; \u0026lt;div class=\u0026#34;modal\u0026#34; v-if=\u0026#34;visible\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;modal-content\u0026#34;\u0026gt; \u0026lt;h3\u0026gt;{{ title }}\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;{{ message }}\u0026lt;/p\u0026gt; \u0026lt;div class=\u0026#34;modal-actions\u0026#34;\u0026gt; \u0026lt;button @click=\u0026#34;confirmAction\u0026#34;\u0026gt;Confirm\u0026lt;/button\u0026gt; \u0026lt;button @click=\u0026#34;cancelAction\u0026#34;\u0026gt;Cancel\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { props: { visible: { type: Boolean, default: false }, title: { type: String, default: \u0026#39;Confirm Action\u0026#39; }, message: { type: String, default: \u0026#39;Are you sure you want to proceed?\u0026#39; } }, methods: { confirmAction() { this.$emit(\u0026#39;confirmed\u0026#39;); }, cancelAction() { this.$emit(\u0026#39;cancelled\u0026#39;); } } }; \u0026lt;/script\u0026gt; \u0026lt;style scoped\u0026gt; .modal { position: fixed; top: 0; left: 0; right: 0; bottom: 0; background: rgba(0, 0, 0, 0.5); display: flex; align-items: center; justify-content: center; } .modal-content { background: #fff; padding: 1.5rem; border-radius: 4px; width: 100%; max-width: 400px; } .modal-actions { display: flex; justify-content: flex-end; gap: 1rem; } \u0026lt;/style\u0026gt; Additional Reusable Components Password Confirmation Modals:\nSimilar to the confirmation modal above, a password confirmation modal can prompt users to re-enter their password before making critical changes, ensuring security and consistency.\nStandardized Button Components:\nCreating a reusable button component that encapsulates various states (default, hover, active, disabled) helps maintain a consistent look and feel across all critical actions.\nConclusion Building reusable components in VueJS not only streamlines the development process but also enhances the overall user experience. For critical actions—like confirming deletions or verifying passwords—a consistent UI is essential to reduce confusion and build user trust. By creating and maintaining reusable components for modals, buttons, and other interface elements, you ensure that your application remains both robust and user-friendly.\nAdopting a component-based approach in VueJS leads to faster development, easier maintenance, and a more consistent interface, all of which are critical for modern web applications. Consider integrating these practices into your next project to see the tangible benefits in both code quality and user satisfaction.\n","permalink":"https://mhassan.dev/blog/reusing-components-benefits/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn modern web development, especially with frameworks like VueJS, building reusable components is a best practice that significantly improves both development efficiency and user experience. When dealing with critical actions—such as password changes, data deletions, or any irreversible actions—maintaining consistency is key. Reusable components, like confirmation modals or standardized buttons, ensure that users have a predictable and secure interaction every time.\u003c/p\u003e\n\u003ch2 id=\"benefits-of-reusable-components\"\u003eBenefits of Reusable Components\u003c/h2\u003e\n\u003cp\u003eReusable components offer several significant advantages:\u003c/p\u003e","title":"The Importance of Reusable Components for Critical Actions in VueJS"},{"content":"Introduction In modern web applications, speed and responsiveness are essential for a smooth user experience. One effective strategy to achieve this is preloading data when a page loads. For example, on a generate invoice page, preloading product data upon mounting ensures that users can search through products without any noticeable delay. This article explains the benefits of preloading data and includes a practical code example.\nBenefits of Preloading Data Preloading data on page load offers several key advantages:\nFaster User Interactions:\nWith the data already available in memory, functions like search can filter through products immediately, without waiting for additional network requests.\nReduced Latency:\nEliminating extra API calls during user interactions minimizes delays, leading to a more responsive interface.\nImproved Application Performance:\nBy consolidating data retrieval to the initial page load, network usage is optimized and subsequent operations become faster.\nEnhanced User Experience:\nImmediate feedback during searches and other interactions creates a smoother workflow, increasing overall user satisfaction.\nCode Example Below is a sample code snippet demonstrating how to preload product data on page load and perform a local search on an invoice page. This example uses a setup function (common in Vue.js with the Composition API) to initialize the product store, load products on mount, and filter the products based on a search query.\nsetup() { const authStore = useAuthStore(); const productStore = useProductStore(); // Initialize the product store // Define reactive references for the search query and search results const searchQuery = ref(\u0026#39;\u0026#39;); const searchResults = ref([]); // Function to preload products when the page loads const loadProducts = async () =\u0026gt; { await productStore.fetchProducts(); // Fetch the products and store them }; // Function to search products locally based on the query const searchProducts = () =\u0026gt; { if (searchQuery.value.trim() === \u0026#39;\u0026#39;) { searchResults.value = []; return; } // Filter products using local data based on the search query searchResults.value = productStore.products.filter(product =\u0026gt; { const productName = product.name || \u0026#39;\u0026#39;; // Default to empty string if undefined const productDescription = product.description || \u0026#39;\u0026#39;; // Default to empty string if undefined return productName.toLowerCase().includes(searchQuery.value.toLowerCase()) || productDescription.toLowerCase().includes(searchQuery.value.toLowerCase()); }); }; // Preload products when the component is mounted onMounted(() =\u0026gt; { loadProducts(); }); return { authStore, productStore, searchQuery, searchResults, searchProducts }; }, Explanation of the Code Initialization:\nThe code initializes the authentication and product stores. Reactive references searchQuery and searchResults are declared to manage the user\u0026rsquo;s search input and the results, respectively.\nPreloading Data:\nThe loadProducts function asynchronously fetches products from the product store when the component mounts. This preloading ensures that all product data is available immediately after the page loads.\nLocal Search:\nThe searchProducts function performs local filtering on the preloaded product data. If the search query is empty, it resets the results. Otherwise, it filters the product list based on whether the product\u0026rsquo;s name or description contains the search query.\nonMounted Hook:\nThe onMounted lifecycle hook calls loadProducts, ensuring that the data is fetched as soon as the component is rendered.\nConclusion Preloading data on page load is a powerful technique to enhance performance in web applications. By loading the necessary data upfront, applications can deliver instant feedback for operations such as searches, resulting in a more responsive and efficient user experience. This strategy not only reduces network latency but also improves overall performance by allowing local data operations.\nImplementing such techniques in your projects, especially in critical areas like the generate invoice page, can lead to faster interactions and a more satisfying user experience. Consider adopting preloading methods in your future projects to optimize performance and streamline data access.\n","permalink":"https://mhassan.dev/blog/preloading-data-for-performance/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn modern web applications, speed and responsiveness are essential for a smooth user experience. One effective strategy to achieve this is preloading data when a page loads. For example, on a generate invoice page, preloading product data upon mounting ensures that users can search through products without any noticeable delay. This article explains the benefits of preloading data and includes a practical code example.\u003c/p\u003e\n\u003ch2 id=\"benefits-of-preloading-data\"\u003eBenefits of Preloading Data\u003c/h2\u003e\n\u003cp\u003ePreloading data on page load offers several key advantages:\u003c/p\u003e","title":"Advantages of Preloading Data on Page Load"},{"content":" Transform Your Business with Custom Software Solutions From point-of-sale systems to full-scale web applications, I bring your ideas to life.\nSchedule a Free Consultation 3.5+ Years Experience 13+ Projects Delivered 100% Client Satisfaction What I Bring to Your Project Point of Sale Expertise Creator of ChronoPOS, delivering modern cloud-based solutions for retail, restaurants, and service industries. Seamless operations, powerful analytics, and scalable architecture.\nFull-Stack Development Building robust web applications using Vue.js, Django, and PostgreSQL. Specializing in high-performance, secure, and scalable software solutions tailored to business needs.\nBusiness Automation Streamlining operations through custom software solutions, API integrations, and intelligent workflow automation. Boost efficiency and reduce operational costs.\nE-Commerce Solutions Developing and optimizing e-commerce platforms for hardware, sanitary, and industrial equipment stores. Expertise in UI/UX design, payment integration, and inventory management.\nScalable API Development Designing and building efficient, RESTful APIs with Django and PostgreSQL, ensuring seamless communication between applications and third-party services.\nTechnical Consultation \u0026 Mentorship Providing guidance to businesses and aspiring developers, helping them make informed technical decisions, optimize architecture, and improve software development workflows.\nSchedule Your Free Consultation Choose a time that works for you to discuss:\nInitial project requirements and goals Technical architecture and solution design ChronoPOS demos and customization options Timeline and implementation strategy Book Your Call Now\nWhat People Are Saying \"I highly recommend Hassan, whom I directly supervised during both the internship and our collaborative work on the Final Year Project (FYP). He consistently demonstrated exceptional work ethic, completing assignments ahead of schedule and showcasing a strong understanding of complex tasks. Beyond technical skills, he possesses excellent interpersonal skills, making him an invaluable team player. He consistently brought a positive attitude to the workplace, fostering a collaborative and productive environment. \u0026ldquo;\n- Muhammad Hamid Raza, Principle Architect @Arrivy\n\"ChronoPOS transformed how we manage our retail stores. With automated inventory tracking and seamless invoicing, we have reduced errors and increased sales efficiency.\"\n- Muhammad Inam, Wholesale Business Manager \"As a wholesale business, managing suppliers and sales used to be a nightmare. ChronoPOS streamlined everything, saving us hours every week.\"\n- Usman Ghany, Retail Store Owner Let\u0026rsquo;s Connect I\u0026rsquo;m always excited to hear about new projects and challenges. Reach out through any of these channels:\n📧 Email: raihassanraza10@gmail.com 🌐 Portfolio: mhassan.dev 💼 LinkedIn: linkedin.com/in/hassanraza22 📅 Calendar: Book a call Whether you need a custom software solution, want to implement ChronoPOS, or just want to discuss potential collaborations, I\u0026rsquo;m here to help turn your vision into reality.\n","permalink":"https://mhassan.dev/book-a-call/","summary":"Schedule a consultation to discuss your next project, ChronoPOS implementation, or custom software needs.","title":"Let's Build Something Amazing Together"},{"content":"Background Building a POS system that handles inventory, sales, and real-time reporting presented multiple performance bottlenecks. With a PostgreSQL database and a Django backend, early performance issues arose due to inefficient query patterns, redundant updates, and excessive database hits.\nInitial Problems 1. Slow Bulk Updates Updating multiple records individually in Django was inefficient. Consider this naïve approach:\nfor product in products: product.stock -= 1 product.save() This triggered a separate UPDATE query for each product, significantly slowing down batch operations.\n2. Signal Overhead Django signals were initially used to track stock changes, but they fired on every save, leading to unnecessary computations.\n@receiver(post_save, sender=Sale) def update_inventory(sender, instance, **kwargs): product = instance.product product.stock -= instance.quantity product.save() With high transaction volumes, this became a major bottleneck.\n3. Redundant Queries Certain parts of the system, such as product conversion rates (e.g., unit-based conversions), recalculated values every time instead of caching them.\ndef get_conversion_rate(product): return ConversionRate.objects.get(product=product).rate Optimizations Implemented 1. Using bulk_update for Efficiency Instead of saving each instance separately, Django’s bulk_update was used to update multiple rows efficiently.\nProduct.objects.bulk_update(products, [\u0026#39;stock\u0026#39;]) This reduced the number of queries from N to 1.\n2. Replacing Signals with Direct Updates Instead of relying on Django signals, updates were performed explicitly in views or services:\nSale.objects.create(product=product, quantity=5) Product.objects.filter(id=product.id).update(stock=F(\u0026#39;stock\u0026#39;) - 5) By using F expressions, updates were performed in a single SQL statement, improving efficiency.\n3. Caching Frequently Accessed Data For product conversion rates, a caching mechanism using Django’s built-in cache framework was introduced:\nfrom django.core.cache import cache def get_conversion_rate(product): cache_key = f\u0026#39;conversion_rate_{product.id}\u0026#39; rate = cache.get(cache_key) if rate is None: rate = ConversionRate.objects.get(product=product).rate cache.set(cache_key, rate, timeout=3600) # Cache for 1 hour return rate This reduced redundant database hits and significantly improved response times.\nResults Bulk updates reduced update time from seconds to milliseconds. Eliminating unnecessary signals lowered database write load. Caching reduced redundant queries, leading to faster response times in product-related calculations. Final Thoughts Performance tuning in Django requires a mix of bulk operations, query optimization, and caching. Understanding when to use Django’s ORM features efficiently can prevent unnecessary database load and keep the application responsive. This approach significantly improved the speed of a POS system handling thousands of transactions daily.\n","permalink":"https://mhassan.dev/blog/optimizing-django-performance/","summary":"Optimizing Django for a high-traffic POS system required bulk updates, caching, and efficient query strategies. This post documents the challenges and solutions.","title":"Optimizing Django Performance: Lessons from a POS System"},{"content":"","permalink":"https://mhassan.dev/clients/client1/","summary":"","title":"Client1"},{"content":" Why Choose ChronoPOS? ChronoPOS is not just another POS system—it is a business management powerhouse that helps retailers, wholesalers, and enterprises streamline operations. Designed with cutting-edge technology, ChronoPOS provides reliability, efficiency, and scalability to businesses of all sizes. Lightning-Fast Transactions: Speed matters. ChronoPOS processes sales in an instant, ensuring no customer waits too long. Multi-Store \u0026 Multi-User Support: Whether you have one store or a chain of outlets, ChronoPOS seamlessly scales with you. Smart Inventory Management: Stay on top of stock levels, automate low-stock alerts, and manage supplier orders effortlessly. Insightful Analytics: Make data-driven decisions with powerful reporting tools that provide sales trends, customer insights, and profitability analysis. Secure \u0026 Reliable: Built-in user roles, permission-based access, and encrypted transactions keep your business data safe. Key Features Performance \u0026amp; Scalability Built with VueJS, Django, and PostgreSQL, ChronoPOS is optimized for speed and performance. Whether handling peak business hours or managing multiple store locations, performance remains smooth, reliable, and efficient. Inventory \u0026amp; Supplier Management Real-time inventory tracking to prevent stock shortages. Automated supplier order management for seamless restocking. Bulk product import/export functionality for easy data handling. Sales \u0026amp; Financial Management Customizable invoicing with digital receipts and printed bills. Automated profit and loss calculations to track financial health. Integrated payment methods, including cash, card, and online transactions. User \u0026amp; Security Management Multi-user system with role-based permissions. Audit logging to track every action taken in the system. Secure authentication with encryption protocols. Visual Overview Real-time business insights with an intuitive dashboard. Manage products, units, and pricing efficiently. Never run out of things with real time inventory tracking Quickly create orders for your suppliers Minimize errors with an automated returns process. Track transactions and manage customer balances easily. Manage each customer's ledger in detail Generate detailed reports for sales trends and business performance. Manage Supply Chain Partners Track transactions and manage supplier balances easily. Track daily bills, refunds, and quotations at a glance Built in diary so you never forget anything Increase retention with an integrated loyalty program. \u0026times; Customer Success Stories Hundreds of businesses trust ChronoPOS to handle their daily operations. From small retailers to multi-location franchises, our system has helped businesses improve efficiency, reduce costs, and increase profitability. “ChronoPOS transformed how we manage our retail stores. With automated inventory tracking and seamless invoicing, we have reduced errors and increased sales efficiency.”\n– Usman Ghany, Retail Store Owner “As a wholesale business, managing suppliers and sales used to be a nightmare. ChronoPOS streamlined everything, saving us hours every week.”\n– Muhammad Inam, Wholesale Business Manager Get ChronoPOS for Your Business ChronoPOS has processed over Rs. 68 million in transactions, helping businesses enhance efficiency and accuracy. Experience its powerful features firsthand by requesting a free demo. Contact: raihassanraza10@gmail.com\n","permalink":"https://mhassan.dev/projects/chronopos/","summary":"\u003cdiv class=\"chronopos-container\"\u003e\n\u003ch2 id=\"why-choose-chronopos\"\u003eWhy Choose ChronoPOS?\u003c/h2\u003e\n\u003cp class=\"justified-text\"\u003e\nChronoPOS is not just another POS system—it is a business management powerhouse that helps retailers, wholesalers, and enterprises streamline operations. Designed with cutting-edge technology, ChronoPOS provides reliability, efficiency, and scalability to businesses of all sizes.\n\u003c/p\u003e\n\u003cul class=\"feature-list\"\u003e\n  \u003cli\u003e\u003cstrong\u003eLightning-Fast Transactions:\u003c/strong\u003e Speed matters. ChronoPOS processes sales in an instant, ensuring no customer waits too long.\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003eMulti-Store \u0026 Multi-User Support:\u003c/strong\u003e Whether you have one store or a chain of outlets, ChronoPOS seamlessly scales with you.\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003eSmart Inventory Management:\u003c/strong\u003e Stay on top of stock levels, automate low-stock alerts, and manage supplier orders effortlessly.\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003eInsightful Analytics:\u003c/strong\u003e Make data-driven decisions with powerful reporting tools that provide sales trends, customer insights, and profitability analysis.\u003c/li\u003e\n  \u003cli\u003e\u003cstrong\u003eSecure \u0026 Reliable:\u003c/strong\u003e Built-in user roles, permission-based access, and encrypted transactions keep your business data safe.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"key-features\"\u003eKey Features\u003c/h2\u003e\n\u003ch3 id=\"performance--scalability\"\u003ePerformance \u0026amp; Scalability\u003c/h3\u003e\n\u003cp class=\"justified-text\"\u003e\nBuilt with \u003cstrong\u003eVueJS, Django, and PostgreSQL\u003c/strong\u003e, ChronoPOS is optimized for speed and performance. Whether handling peak business hours or managing multiple store locations, performance remains smooth, reliable, and efficient.\n\u003c/p\u003e","title":"ChronoPOS - The Ultimate POS System"},{"content":"Key Features Minimalist and Fast: Developed with Hugo to ensure quick load times and an efficient design. Intuitive Navigation: Utilizes the clean layout of PaperMod for an optimal user experience. Integrated Blog and Projects Section: Effectively presents my work, including detailed project pages and blog posts. Reliable Deployment: Hosted on GitHub Pages for stable and cost-effective performance. Comments Integration with Gisqus: Provides a cost-effective commenting system that limits participation to GitHub users. Gisqus also offers improved moderation controls, reduced spam, and seamless GitHub integration for a more secure and streamlined user experience. Detailed Overview The portfolio website is designed with both form and function in mind. Its key components include:\nResponsive Design: The site adapts seamlessly across devices, ensuring a great viewing experience on desktops, tablets, and mobile devices. SEO Optimization: Built according to SEO best practices to improve search engine visibility. Customizable Layout: Easily modified to add new sections or features as my portfolio evolves. Performance Optimization: Static site generation with Hugo ensures high performance and minimal load times. Preview Below is a screenshot preview of the portfolio website:\nLive Demo To view the live version of the portfolio website, please visit\u0026hellip;.. just kidding. You\u0026rsquo;re already on the website :): Visit My Portfolio\n","permalink":"https://mhassan.dev/projects/portfolio-site/","summary":"\u003ch3 id=\"key-features\"\u003eKey Features\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eMinimalist and Fast\u003c/strong\u003e: Developed with Hugo to ensure quick load times and an efficient design.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eIntuitive Navigation\u003c/strong\u003e: Utilizes the clean layout of PaperMod for an optimal user experience.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eIntegrated Blog and Projects Section\u003c/strong\u003e: Effectively presents my work, including detailed project pages and blog posts.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eReliable Deployment\u003c/strong\u003e: Hosted on GitHub Pages for stable and cost-effective performance.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eComments Integration with Gisqus\u003c/strong\u003e: Provides a cost-effective commenting system that limits participation to GitHub users. Gisqus also offers improved moderation controls, reduced spam, and seamless GitHub integration for a more secure and streamlined user experience.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"detailed-overview\"\u003eDetailed Overview\u003c/h3\u003e\n\u003cp\u003eThe portfolio website is designed with both form and function in mind. Its key components include:\u003c/p\u003e","title":"My Portfolio Website"},{"content":"You\u0026rsquo;ve reached a place that doesn\u0026rsquo;t exist. Maybe the page was moved, deleted, or never existed in the first place (peak gaslighting).\nHere\u0026rsquo;s what you can do: Go back to the homepage and start over. Explore my projects to see my work. Contact me if you need assistance. Or you can stay here and ponder the orb. The choice is yours.\n","permalink":"https://mhassan.dev/404.html","summary":"\u003cp\u003eYou\u0026rsquo;ve reached a place that doesn\u0026rsquo;t exist. Maybe the page was moved, deleted, or never existed in the first place (peak gaslighting).\u003c/p\u003e\n\u003ch3 id=\"heres-what-you-can-do\"\u003eHere\u0026rsquo;s what you can do:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"/\"\u003eGo back to the homepage\u003c/a\u003e and start over.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/projects/\"\u003eExplore my projects\u003c/a\u003e to see my work.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/contact/\"\u003eContact me\u003c/a\u003e if you need assistance.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOr you can stay here and ponder the orb. The choice is yours.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"Pondering my Orb\" loading=\"lazy\" src=\"/assets/ponder.png\"\u003e\u003c/p\u003e","title":"404 - Page Not Found"}]