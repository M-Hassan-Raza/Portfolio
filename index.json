[{"content":"Pakistan The Sole Spokesman: Jinnah, the Muslim League, and the Demand for Pakistan Author: Ayesha Jalal\nThe person who\u0026rsquo;s the reason I can practice my faith freely and live in a somewhat (ahm ahm) independent society.\nThe Making of Pakistan: A Study in Nationalism Author: K.K. Aziz I literally love this book. So many interesting tidbits, newspaper excerpts, and interviews. Gives you a new perspective on the creation of Pakistan.\nNon-Fiction Clash of Civilizations Author: Samuel P. Huntington\nA provocative thesis that reshaped global political discourse in the post–Cold War era. I consider it a slightly racist book but an important one nonetheless.\nThe Limits of Power Author: Andrew J. Bacevich\nA critical examination of the constraints on national power and the perils of overreach. Extremely these days considering how the global political discourse is shaping up.\nGrit: The Power of Passion and Perseverance Author: Angela Duckworth\nA groundbreaking exploration of the power of grit to drive personal and professional success. Hoping to get my grit somewhere sometime soon (tm).\nFiction Mistborn Saga: Complete Trilogy Author: Brandon Sanderson\nPeak fiction right here. I\u0026rsquo;m not fanatic of Mr. Sanderson but this is some gourmet stuff right here.\nAngels \u0026amp; Demons Author: Dan Brown\nA riveting adventure that pits ancient secrets against modern science in a battle of wits (questionable).\n1984 Author: George Orwell\nA chilling dystopian vision of totalitarianism that remains alarmingly relevant. Read this book so you can finally understand the overused memes on the internet by the people who have never even touched a single page of this book.\nProject Hail Mary Auhor: Andy Weir\nA thrilling sci-fi adventure that combines humor, heart, and hard science. I love this book. A perfect sci-fi.\nThe Sword of Kaigen Author: M.L. Wang\nA gripping tale of family, honor, and magic set in a world inspired by Japanese mythology. The tears were definitely tearing that day.\nThe Will of the Many Author: James Islington\nNeed a book 2. I am waiting.\nThe Brothers Karamazov Author: Fyodor Dostoyevsky\nA profound exploration of morality, faith, and the human condition. It\u0026rsquo;s a little long but it is what it is.\nProgramming \u0026 Technical Clean Code: A Handbook of Agile Software Craftsmanship Author: Robert C. Martin\nA definitive guide to writing code that is both elegant and maintainable. I will continue to write garbage code though.\nDesign Patterns: Elements of Reusable Object-Oriented Software Authors: Erich Gamma, Richard Helm, Ralph Johnson, and John Vlissides\nA seminal work introducing timeless design patterns for building flexible, reusable software. The daddy of all design pattern books.\nThe Clean Coder: A Code of Conduct for Professional Programmers Author: Robert C. Martin\nA call to professional discipline and ethical behavior that sets the standard for true craftsmanship.\n","permalink":"https://mhassan.dev/books/","summary":"\u003ch1 id=\"hahahugoshortcode3s0hbhb\"\u003e\u003cspan style=\"color: #FFB4A2;\"\u003ePakistan\u003c/span\u003e\n\u003c/h1\u003e\n\u003ch3 id=\"the-sole-spokesman-jinnah-the-muslim-league-and-the-demand-for-pakistan\"\u003eThe Sole Spokesman: Jinnah, the Muslim League, and the Demand for Pakistan\u003c/h3\u003e\n\u003cp\u003e\u003cfigure\u003e\n    \u003cimg loading=\"lazy\" src=\"/assets/sole.jpg\"\n         alt=\"The Sole Spokesman Cover\" width=\"200\" height=\"300\"/\u003e \n\u003c/figure\u003e\n\n\u003cem\u003eAuthor: Ayesha Jalal\u003c/em\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe person who\u0026rsquo;s the reason I can practice my faith freely and live in a somewhat (ahm ahm) independent society.\u003c/p\u003e\u003c/blockquote\u003e\n\u003chr\u003e\n\u003ch3 id=\"the-making-of-pakistan-a-study-in-nationalism\"\u003eThe Making of Pakistan: A Study in Nationalism\u003c/h3\u003e\n\u003cp\u003e\u003cem\u003eAuthor: K.K. Aziz\u003c/em\u003e\n\u003cfigure\u003e\n    \u003cimg loading=\"lazy\" src=\"/assets/makingofpakistan.jpg\"\n         alt=\"The Making of Pakistan Cover\" width=\"200\" height=\"300\"/\u003e \n\u003c/figure\u003e\n\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI literally love this book. So many interesting tidbits, newspaper excerpts, and interviews. Gives you a new perspective on the creation of Pakistan.\u003c/p\u003e","title":"Books I've Read"},{"content":"Introduction As a developer, having a portfolio website is crucial for showcasing skills, projects, and expertise. I wanted a fast, minimal, and easily maintainable site, so I chose Hugo with the PaperMod theme. Best of all, I leveraged free tools for deployment, analytics, and discussions. Here’s how I built my portfolio website, hosted on GitHub Pages with a Porkbun domain.\nHugo and PaperMod for a Minimalistic Look Hugo is a blazing-fast static site generator, perfect for a developer portfolio. I picked the PaperMod theme because of its:\nClean and professional design. Lightweight and fast performance. Easy configuration for dark mode, search, and social links. Free Hosting with GitHub Pages I wanted a zero-cost, hassle-free hosting solution, and GitHub Pages was the perfect choice. Here’s what I did:\nCreated a public GitHub repository. Configured a GitHub Actions workflow for automatic deployment. Set the gh-pages branch as the deployment source in GitHub Pages settings. Now, every push to my main branch automatically updates my live website.\nFree Analytics with Umami Google Analytics is powerful, but I preferred something privacy-friendly and lightweight. Umami provides:\nSelf-hosted analytics with no third-party tracking. Simple dashboard with essential metrics. No cookies or GDPR concerns. I set up Umami on a free hosting platform and integrated it with my site by adding the tracking script to head.html in Hugo’s layout.\nFree Comments with Giscus I wanted a distraction-free, GitHub-powered commenting system. Giscus was the perfect choice because:\nIt uses GitHub Discussions, so no extra accounts are needed. It’s ad-free and requires no backend setup. Users can comment with their GitHub accounts, keeping discussions relevant. Setting it up was simple:\nInstalled the Giscus GitHub app on my repository. Added the \u0026lt;script\u0026gt; to my site’s config.toml file. Enabled discussions in my GitHub repository settings. Now, visitors can leave comments using GitHub, and I manage them just like regular issues.\nCustom Domain with Porkbun A great domain adds credibility to a portfolio. I registered mhassan.dev on Porkbun, and here’s why it was a great choice:\nAffordable pricing compared to other registrars. Free WHOIS privacy protection. Easy DNS setup for GitHub Pages. Automatic SSL without extra configuration. After purchasing, I simply updated the CNAME record to point to GitHub Pages, and Porkbun handled the HTTPS setup seamlessly.\nFinal Thoughts Building a portfolio website doesn’t have to be expensive. By using Hugo, GitHub Pages, Giscus, Umami, and Porkbun, I got a fast, professional, and cost-effective site with minimal effort. If you’re planning to build your own, these tools are a great starting point!\nCheck out my portfolio at right here dummy, you\u0026rsquo;re on it already :wink:\n","permalink":"https://mhassan.dev/blog/free-website-hosting/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eAs a developer, having a portfolio website is crucial for showcasing skills, projects, and expertise. I wanted a fast, minimal, and easily maintainable site, so I chose \u003cstrong\u003eHugo\u003c/strong\u003e with the \u003cstrong\u003ePaperMod\u003c/strong\u003e theme. Best of all, I leveraged free tools for deployment, analytics, and discussions. Here’s how I built my portfolio website, hosted on \u003cstrong\u003eGitHub Pages\u003c/strong\u003e with a \u003cstrong\u003ePorkbun\u003c/strong\u003e domain.\u003c/p\u003e\n\u003ch2 id=\"hugo-and-papermod-for-a-minimalistic-look\"\u003eHugo and PaperMod for a Minimalistic Look\u003c/h2\u003e\n\u003cp\u003eHugo is a \u003cstrong\u003eblazing-fast static site generator\u003c/strong\u003e, perfect for a developer portfolio. I picked the \u003cstrong\u003ePaperMod\u003c/strong\u003e theme because of its:\u003c/p\u003e","title":"How I Built My Portfolio Website with Hugo, GitHub Pages, and Free Tools"},{"content":"Introduction When dealing with financial transactions in Django applications, maintaining an accurate ledger is critical. However, inefficient signal handling can lead to performance bottlenecks. In this article, we\u0026rsquo;ll explore an optimized approach to recalculating ledger balances while ensuring minimal database impact.\nThe Problem A typical ledger system requires recalculating balances when transactions are inserted, updated, or deleted. Using Django signals, many implementations trigger redundant recalculations, causing excessive database queries and slowing down the application.\nCommon Issues with Signals: Unnecessary Queries: Each save or delete operation triggers a recalculation, even if no meaningful change occurs. Cascade Effects: Bulk operations lead to multiple redundant recalculations. Performance Overhead: Large transaction volumes cause significant slowdowns. Optimized Approach To address these inefficiencies, we introduce a flag-based recalculation strategy that minimizes unnecessary database interactions.\nStep 1: Adding a Recalculation Flag Instead of recalculating every time a transaction is saved, we introduce a _needs_recalc flag:\nfrom django.db import models from django.db.models.signals import post_save, post_delete from django.dispatch import receiver class Transaction(models.Model): amount = models.DecimalField(max_digits=10, decimal_places=2) ledger = models.ForeignKey(\u0026#39;Ledger\u0026#39;, on_delete=models.CASCADE) def save(self, *args, **kwargs): self.ledger._needs_recalc = True super().save(*args, **kwargs) @receiver(post_delete, sender=Transaction) def mark_ledger_for_recalc(sender, instance, **kwargs): instance.ledger._needs_recalc = True Step 2: Efficient Ledger Recalculation Recalculating balances should only occur when necessary, ideally after all related operations are complete:\nfrom django.db import transaction def recalculate_ledger_balances(): ledgers_to_update = Ledger.objects.filter(_needs_recalc=True) for ledger in ledgers_to_update: ledger.recalculate_balance() ledger._needs_recalc = False ledger.save(update_fields=[\u0026#39;balance\u0026#39;]) Step 3: Using Post-Transaction Hooks Using Django’s on_commit() ensures recalculations only happen after successful transactions:\nfrom django.db.transaction import on_commit @receiver(post_save, sender=Transaction) def trigger_ledger_recalc(sender, instance, **kwargs): on_commit(lambda: recalculate_ledger_balances()) Performance Gains With this approach, we achieve:\nReduced Queries: Recalculation happens once per affected ledger, not per transaction. Better Scalability: Batch updates improve efficiency. Consistent Data: Using on_commit() ensures recalculations only happen after successful writes. Conclusion By intelligently managing recalculations, we significantly improve the performance of our ledger system in Django applications. This approach ensures efficiency without sacrificing data accuracy, making it ideal for high-volume financial applications.\n","permalink":"https://mhassan.dev/blog/using-signals-optimally/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eWhen dealing with financial transactions in Django applications, maintaining an accurate ledger is critical. However, inefficient signal handling can lead to performance bottlenecks. In this article, we\u0026rsquo;ll explore an optimized approach to recalculating ledger balances while ensuring minimal database impact.\u003c/p\u003e\n\u003ch2 id=\"the-problem\"\u003eThe Problem\u003c/h2\u003e\n\u003cp\u003eA typical ledger system requires recalculating balances when transactions are inserted, updated, or deleted. Using Django signals, many implementations trigger redundant recalculations, causing excessive database queries and slowing down the application.\u003c/p\u003e","title":"Optimizing Django Signals for Efficient Ledger Recalculations"},{"content":"DMCA Notice We respect the intellectual property rights of others and expect our users to do the same. If you believe that content on our website infringes your copyright, please follow the procedure outlined below.\nFiling a DMCA Notice To file a notice of claimed infringement, please include the following information:\nIdentification of the copyrighted work you claim has been infringed. Identification of the material on our site that is claimed to be infringing and information reasonably sufficient to locate the material. Contact Information: Your name, mailing address, telephone number, and email address. A statement that you have a good faith belief that the disputed use is not authorized by the copyright owner, its agent, or the law. A statement, under penalty of perjury, that the information in your notice is accurate and that you are authorized to act on behalf of the copyright owner. Your electronic signature. How to Submit Your Notice Send your DMCA notice to the following email address: raihassanraza10@gmail.com. We will review your notice and take appropriate action in accordance with the Digital Millennium Copyright Act.\nCounter-Notification If you believe that your content was removed in error, you may submit a counter-notification. This must include your contact information and a statement under penalty of perjury that you have a good faith belief the content was removed as a result of mistake or misidentification.\nDisclaimer Please note that this DMCA Notice is provided for informational purposes only and does not constitute legal advice. We recommend consulting with a qualified attorney for any legal concerns.\nContact If you have any questions regarding our DMCA policy, please contact us at raihassanraza10@gmail.com.\nPSA: Again, I\u0026rsquo;m just adding this page for the sake of completeness. You should definitely consult with a legal professional to ensure your DMCA policy is compliant with the law. Also, don\u0026rsquo;t steal content. It\u0026rsquo;s not based at all.\n","permalink":"https://mhassan.dev/dmca/","summary":"\u003ch2 id=\"dmca-notice\"\u003eDMCA Notice\u003c/h2\u003e\n\u003cp\u003eWe respect the intellectual property rights of others and expect our users to do the same. If you believe that content on our website infringes your copyright, please follow the procedure outlined below.\u003c/p\u003e\n\u003ch2 id=\"filing-a-dmca-notice\"\u003eFiling a DMCA Notice\u003c/h2\u003e\n\u003cp\u003eTo file a notice of claimed infringement, please include the following information:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003eIdentification of the copyrighted work\u003c/strong\u003e you claim has been infringed.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eIdentification of the material\u003c/strong\u003e on our site that is claimed to be infringing and information reasonably sufficient to locate the material.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eContact Information:\u003c/strong\u003e Your name, mailing address, telephone number, and email address.\u003c/li\u003e\n\u003cli\u003eA statement that you have a good faith belief that the disputed use is not authorized by the copyright owner, its agent, or the law.\u003c/li\u003e\n\u003cli\u003eA statement, under penalty of perjury, that the information in your notice is accurate and that you are authorized to act on behalf of the copyright owner.\u003c/li\u003e\n\u003cli\u003eYour electronic signature.\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"how-to-submit-your-notice\"\u003eHow to Submit Your Notice\u003c/h2\u003e\n\u003cp\u003eSend your DMCA notice to the following email address: \u003ca href=\"mailto:raihassanraza10@gmail.com\"\u003eraihassanraza10@gmail.com\u003c/a\u003e. We will review your notice and take appropriate action in accordance with the Digital Millennium Copyright Act.\u003c/p\u003e","title":"DMCA Notice"},{"content":"Introduction Your privacy is important to us. This Privacy Policy explains how we collect, use, and safeguard your personal information when you visit our website. By using our site, you consent to the practices described in this policy.\nInformation We Collect Personal Information: We may collect your name, email address, and other contact details when you subscribe to our newsletter or contact us. Usage Data: We automatically collect information about how you interact with our website, including pages visited, time spent on pages, and browser details. How We Use Your Information We use your data to:\nImprove website functionality and user experience. Respond to inquiries and provide customer support. Send periodic updates or newsletters (if you have opted in). Data Protection We implement reasonable security measures to protect your personal information from unauthorized access, disclosure, or alteration. However, no data transmission over the internet is entirely secure, so please exercise caution when sharing sensitive information online.\nThird-Party Disclosure We do not sell or share your personal information with third parties, except as necessary to comply with legal obligations or protect our rights.\nCookies Our website uses cookies to enhance your experience. Cookies help us understand how visitors interact with our site so we can improve its functionality. You can control cookie settings through your browser.\nChanges to This Policy We may update this Privacy Policy periodically. Any changes will be posted on this page with an updated effective date. Please review this policy regularly.\nContact Us If you have any questions or concerns about this Privacy Policy, please contact us at raihassanraza10@gmail.com.\nPSA: I created this page quickly and didn\u0026rsquo;t care much about the content. You should definitely spend more time on your privacy policy tho :D\n","permalink":"https://mhassan.dev/privacy-policy/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eYour privacy is important to us. This Privacy Policy explains how we collect, use, and safeguard your personal information when you visit our website. By using our site, you consent to the practices described in this policy.\u003c/p\u003e\n\u003ch2 id=\"information-we-collect\"\u003eInformation We Collect\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003ePersonal Information:\u003c/strong\u003e We may collect your name, email address, and other contact details when you subscribe to our newsletter or contact us.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eUsage Data:\u003c/strong\u003e We automatically collect information about how you interact with our website, including pages visited, time spent on pages, and browser details.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"how-we-use-your-information\"\u003eHow We Use Your Information\u003c/h2\u003e\n\u003cp\u003eWe use your data to:\u003c/p\u003e","title":"Privacy Policy"},{"content":"Introduction In modern web development, especially with frameworks like VueJS, building reusable components is a best practice that significantly improves both development efficiency and user experience. When dealing with critical actions—such as password changes, data deletions, or any irreversible actions—maintaining consistency is key. Reusable components, like confirmation modals or standardized buttons, ensure that users have a predictable and secure interaction every time.\nBenefits of Reusable Components Reusable components offer several significant advantages:\nConsistency:\nStandardized UI elements, such as confirmation modals or password prompts, ensure that users are always presented with familiar interfaces when performing critical actions. This consistency reduces confusion and builds trust in your application.\nMaintainability:\nWhen a component is reused across multiple parts of an application, any necessary updates or bug fixes need to be implemented only once. This centralization simplifies maintenance and helps avoid discrepancies in the user experience.\nImproved Development Speed:\nOnce a reusable component is created, it can be easily integrated wherever needed. This reduces code duplication and speeds up the development process, allowing you to focus on new features rather than rewriting similar functionality.\nEnhanced Testing:\nWith a single, well-tested component in use throughout your application, you can be confident that critical user interactions work reliably every time, reducing the potential for errors.\nReusable Components in VueJS VueJS\u0026rsquo;s component-based architecture makes it ideal for creating modular, reusable UI elements. Consider the following example of a confirmation modal component:\nConfirmation Modal Component Example This component can be used anywhere you need to confirm a critical action. It accepts customizable properties for the title and message and emits events based on the user\u0026rsquo;s choice.\n\u0026lt;template\u0026gt; \u0026lt;div class=\u0026#34;modal\u0026#34; v-if=\u0026#34;visible\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;modal-content\u0026#34;\u0026gt; \u0026lt;h3\u0026gt;{{ title }}\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;{{ message }}\u0026lt;/p\u0026gt; \u0026lt;div class=\u0026#34;modal-actions\u0026#34;\u0026gt; \u0026lt;button @click=\u0026#34;confirmAction\u0026#34;\u0026gt;Confirm\u0026lt;/button\u0026gt; \u0026lt;button @click=\u0026#34;cancelAction\u0026#34;\u0026gt;Cancel\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { props: { visible: { type: Boolean, default: false }, title: { type: String, default: \u0026#39;Confirm Action\u0026#39; }, message: { type: String, default: \u0026#39;Are you sure you want to proceed?\u0026#39; } }, methods: { confirmAction() { this.$emit(\u0026#39;confirmed\u0026#39;); }, cancelAction() { this.$emit(\u0026#39;cancelled\u0026#39;); } } }; \u0026lt;/script\u0026gt; \u0026lt;style scoped\u0026gt; .modal { position: fixed; top: 0; left: 0; right: 0; bottom: 0; background: rgba(0, 0, 0, 0.5); display: flex; align-items: center; justify-content: center; } .modal-content { background: #fff; padding: 1.5rem; border-radius: 4px; width: 100%; max-width: 400px; } .modal-actions { display: flex; justify-content: flex-end; gap: 1rem; } \u0026lt;/style\u0026gt; Additional Reusable Components Password Confirmation Modals:\nSimilar to the confirmation modal above, a password confirmation modal can prompt users to re-enter their password before making critical changes, ensuring security and consistency.\nStandardized Button Components:\nCreating a reusable button component that encapsulates various states (default, hover, active, disabled) helps maintain a consistent look and feel across all critical actions.\nConclusion Building reusable components in VueJS not only streamlines the development process but also enhances the overall user experience. For critical actions—like confirming deletions or verifying passwords—a consistent UI is essential to reduce confusion and build user trust. By creating and maintaining reusable components for modals, buttons, and other interface elements, you ensure that your application remains both robust and user-friendly.\nAdopting a component-based approach in VueJS leads to faster development, easier maintenance, and a more consistent interface, all of which are critical for modern web applications. Consider integrating these practices into your next project to see the tangible benefits in both code quality and user satisfaction.\n","permalink":"https://mhassan.dev/blog/reusing-components-benefits/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn modern web development, especially with frameworks like VueJS, building reusable components is a best practice that significantly improves both development efficiency and user experience. When dealing with critical actions—such as password changes, data deletions, or any irreversible actions—maintaining consistency is key. Reusable components, like confirmation modals or standardized buttons, ensure that users have a predictable and secure interaction every time.\u003c/p\u003e\n\u003ch2 id=\"benefits-of-reusable-components\"\u003eBenefits of Reusable Components\u003c/h2\u003e\n\u003cp\u003eReusable components offer several significant advantages:\u003c/p\u003e","title":"The Importance of Reusable Components for Critical Actions in VueJS"},{"content":"Introduction In modern web applications, speed and responsiveness are essential for a smooth user experience. One effective strategy to achieve this is preloading data when a page loads. For example, on a generate invoice page, preloading product data upon mounting ensures that users can search through products without any noticeable delay. This article explains the benefits of preloading data and includes a practical code example.\nBenefits of Preloading Data Preloading data on page load offers several key advantages:\nFaster User Interactions:\nWith the data already available in memory, functions like search can filter through products immediately, without waiting for additional network requests.\nReduced Latency:\nEliminating extra API calls during user interactions minimizes delays, leading to a more responsive interface.\nImproved Application Performance:\nBy consolidating data retrieval to the initial page load, network usage is optimized and subsequent operations become faster.\nEnhanced User Experience:\nImmediate feedback during searches and other interactions creates a smoother workflow, increasing overall user satisfaction.\nCode Example Below is a sample code snippet demonstrating how to preload product data on page load and perform a local search on an invoice page. This example uses a setup function (common in Vue.js with the Composition API) to initialize the product store, load products on mount, and filter the products based on a search query.\nsetup() { const authStore = useAuthStore(); const productStore = useProductStore(); // Initialize the product store // Define reactive references for the search query and search results const searchQuery = ref(\u0026#39;\u0026#39;); const searchResults = ref([]); // Function to preload products when the page loads const loadProducts = async () =\u0026gt; { await productStore.fetchProducts(); // Fetch the products and store them }; // Function to search products locally based on the query const searchProducts = () =\u0026gt; { if (searchQuery.value.trim() === \u0026#39;\u0026#39;) { searchResults.value = []; return; } // Filter products using local data based on the search query searchResults.value = productStore.products.filter(product =\u0026gt; { const productName = product.name || \u0026#39;\u0026#39;; // Default to empty string if undefined const productDescription = product.description || \u0026#39;\u0026#39;; // Default to empty string if undefined return productName.toLowerCase().includes(searchQuery.value.toLowerCase()) || productDescription.toLowerCase().includes(searchQuery.value.toLowerCase()); }); }; // Preload products when the component is mounted onMounted(() =\u0026gt; { loadProducts(); }); return { authStore, productStore, searchQuery, searchResults, searchProducts }; }, Explanation of the Code Initialization:\nThe code initializes the authentication and product stores. Reactive references searchQuery and searchResults are declared to manage the user\u0026rsquo;s search input and the results, respectively.\nPreloading Data:\nThe loadProducts function asynchronously fetches products from the product store when the component mounts. This preloading ensures that all product data is available immediately after the page loads.\nLocal Search:\nThe searchProducts function performs local filtering on the preloaded product data. If the search query is empty, it resets the results. Otherwise, it filters the product list based on whether the product\u0026rsquo;s name or description contains the search query.\nonMounted Hook:\nThe onMounted lifecycle hook calls loadProducts, ensuring that the data is fetched as soon as the component is rendered.\nConclusion Preloading data on page load is a powerful technique to enhance performance in web applications. By loading the necessary data upfront, applications can deliver instant feedback for operations such as searches, resulting in a more responsive and efficient user experience. This strategy not only reduces network latency but also improves overall performance by allowing local data operations.\nImplementing such techniques in your projects, especially in critical areas like the generate invoice page, can lead to faster interactions and a more satisfying user experience. Consider adopting preloading methods in your future projects to optimize performance and streamline data access.\n","permalink":"https://mhassan.dev/blog/preloading-data-for-performance/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn modern web applications, speed and responsiveness are essential for a smooth user experience. One effective strategy to achieve this is preloading data when a page loads. For example, on a generate invoice page, preloading product data upon mounting ensures that users can search through products without any noticeable delay. This article explains the benefits of preloading data and includes a practical code example.\u003c/p\u003e\n\u003ch2 id=\"benefits-of-preloading-data\"\u003eBenefits of Preloading Data\u003c/h2\u003e\n\u003cp\u003ePreloading data on page load offers several key advantages:\u003c/p\u003e","title":"Advantages of Preloading Data on Page Load"},{"content":"Background Building a POS system that handles inventory, sales, and real-time reporting presented multiple performance bottlenecks. With a PostgreSQL database and a Django backend, early performance issues arose due to inefficient query patterns, redundant updates, and excessive database hits.\nInitial Problems 1. Slow Bulk Updates Updating multiple records individually in Django was inefficient. Consider this naïve approach:\nfor product in products: product.stock -= 1 product.save() This triggered a separate UPDATE query for each product, significantly slowing down batch operations.\n2. Signal Overhead Django signals were initially used to track stock changes, but they fired on every save, leading to unnecessary computations.\n@receiver(post_save, sender=Sale) def update_inventory(sender, instance, **kwargs): product = instance.product product.stock -= instance.quantity product.save() With high transaction volumes, this became a major bottleneck.\n3. Redundant Queries Certain parts of the system, such as product conversion rates (e.g., unit-based conversions), recalculated values every time instead of caching them.\ndef get_conversion_rate(product): return ConversionRate.objects.get(product=product).rate Optimizations Implemented 1. Using bulk_update for Efficiency Instead of saving each instance separately, Django’s bulk_update was used to update multiple rows efficiently.\nProduct.objects.bulk_update(products, [\u0026#39;stock\u0026#39;]) This reduced the number of queries from N to 1.\n2. Replacing Signals with Direct Updates Instead of relying on Django signals, updates were performed explicitly in views or services:\nSale.objects.create(product=product, quantity=5) Product.objects.filter(id=product.id).update(stock=F(\u0026#39;stock\u0026#39;) - 5) By using F expressions, updates were performed in a single SQL statement, improving efficiency.\n3. Caching Frequently Accessed Data For product conversion rates, a caching mechanism using Django’s built-in cache framework was introduced:\nfrom django.core.cache import cache def get_conversion_rate(product): cache_key = f\u0026#39;conversion_rate_{product.id}\u0026#39; rate = cache.get(cache_key) if rate is None: rate = ConversionRate.objects.get(product=product).rate cache.set(cache_key, rate, timeout=3600) # Cache for 1 hour return rate This reduced redundant database hits and significantly improved response times.\nResults Bulk updates reduced update time from seconds to milliseconds. Eliminating unnecessary signals lowered database write load. Caching reduced redundant queries, leading to faster response times in product-related calculations. Final Thoughts Performance tuning in Django requires a mix of bulk operations, query optimization, and caching. Understanding when to use Django’s ORM features efficiently can prevent unnecessary database load and keep the application responsive. This approach significantly improved the speed of a POS system handling thousands of transactions daily.\n","permalink":"https://mhassan.dev/blog/optimizing-django-performance/","summary":"Optimizing Django for a high-traffic POS system required bulk updates, caching, and efficient query strategies. This post documents the challenges and solutions.","title":"Optimizing Django Performance: Lessons from a POS System"},{"content":"","permalink":"https://mhassan.dev/clients/client1/","summary":"","title":"Client1"},{"content":"Key Features Performance \u0026amp; Scalability Built with VueJS, Django, and PostgreSQL for a seamless, high-performance experience. Optimized for fast transactions and minimal latency. Easily scales to support multiple branches and high transaction volumes. Inventory \u0026amp; Supplier Management Real-time stock tracking with automated low-stock alerts. Supplier management for streamlined order processing and restocking. Batch inventory updates for improved efficiency. Sales \u0026amp; Financial Management Customizable invoicing with digital and printed receipts. Advanced reporting tools to analyze sales, profits, and trends. Automated ledger management for precise financial records. User \u0026amp; Security Management Multi-user support with customizable roles and permissions. Audit logs to track actions and ensure accountability. Secure authentication and data encryption for protection against threats. Visual Overview For the following section, if an image is blurred or pixelated, it's to protect sensitive information of the customers since these imagess are taken from a real POS system. I have tried my best to give as much info as possible without compromising the privacy of the customers. Dashboard A clean, intuitive interface that provides real-time insights into business performance.\nProduct Database Efficiently manage products, units, and pricing with a centralized database.\nReturns Efficiently manage product returns with a streamlined process that minimizes errors and ensures proper inventory updates.\nReturns Module Interface\nCustomer Ledger Access comprehensive transaction histories and maintain detailed records to improve customer management and support.\nCustomer Ledger Overview\nSupplier Ledger Keep organized records of supplier transactions and interactions to facilitate smoother vendor management.\nSupplier Ledger Dashboard\nArchive Securely store historical transaction data and records, making it easy to retrieve and review past information when needed.\nArchive Records Display\nProduct Sales Report Generate detailed reports on product performance, inventory levels, and sales trends to drive informed business decisions.\nProduct Report Summary\nCustomer Record Maintain a centralized repository of customer information, purchase history, and feedback to enhance service quality and engagement.\nCustomer Record Interface\nSupply Chain Monitor and manage the entire supply chain process from procurement to delivery, ensuring optimal operational efficiency.\nSupply Chain Management\nNotes Quickly add and manage notes associated with transactions and communications to support clear and consistent record keeping.\nNotes Section\nLoyalty Program Implement and manage a loyalty program that tracks customer rewards and encourages repeat business through personalized offers.\nLoyalty Program Dashboard\nGet ChronoPOS for Your Business ChronoPOS has processed over Rs. 68 million in transactions, helping businesses improve efficiency and accuracy. To see it in action or request a demo, reach out today.\n📩 Contact: raihassanraza10@gmail.com\n","permalink":"https://mhassan.dev/projects/chronopos/","summary":"\u003ch2 id=\"key-features\"\u003eKey Features\u003c/h2\u003e\n\u003ch3 id=\"performance--scalability\"\u003ePerformance \u0026amp; Scalability\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt with \u003cstrong\u003eVueJS, Django, and PostgreSQL\u003c/strong\u003e for a seamless, high-performance experience.\u003c/li\u003e\n\u003cli\u003eOptimized for \u003cstrong\u003efast transactions\u003c/strong\u003e and minimal latency.\u003c/li\u003e\n\u003cli\u003eEasily scales to support multiple branches and high transaction volumes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"inventory--supplier-management\"\u003eInventory \u0026amp; Supplier Management\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eReal-time stock tracking\u003c/strong\u003e with automated low-stock alerts.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSupplier management\u003c/strong\u003e for streamlined order processing and restocking.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eBatch inventory updates\u003c/strong\u003e for improved efficiency.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"sales--financial-management\"\u003eSales \u0026amp; Financial Management\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eCustomizable invoicing\u003c/strong\u003e with digital and printed receipts.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAdvanced reporting tools\u003c/strong\u003e to analyze sales, profits, and trends.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAutomated ledger management\u003c/strong\u003e for precise financial records.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"user--security-management\"\u003eUser \u0026amp; Security Management\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eMulti-user support\u003c/strong\u003e with customizable roles and permissions.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAudit logs\u003c/strong\u003e to track actions and ensure accountability.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSecure authentication and data encryption\u003c/strong\u003e for protection against threats.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"visual-overview\"\u003eVisual Overview\u003c/h2\u003e\n\u003ch5 id=\"hahahugoshortcode22s0hbhb\"\u003e\u003cspan style=\"color: #FFB4A2;\"\u003eFor the following section, if an image is blurred or pixelated, it's to protect sensitive information of the customers since these imagess are taken from a real POS system. I have tried my best to give as much info as possible without compromising the privacy of the customers.\u003c/span\u003e\n\u003c/h5\u003e\n\u003ch3 id=\"dashboard\"\u003eDashboard\u003c/h3\u003e\n\u003cp\u003eA clean, intuitive interface that provides real-time insights into business performance.\u003c/p\u003e","title":"ChronoPOS - The Ultimate POS System"},{"content":"Key Features Minimalist and Fast: Developed with Hugo to ensure quick load times and an efficient design. Intuitive Navigation: Utilizes the clean layout of PaperMod for an optimal user experience. Integrated Blog and Projects Section: Effectively presents my work, including detailed project pages and blog posts. Reliable Deployment: Hosted on GitHub Pages for stable and cost-effective performance. Comments Integration with Gisqus: Provides a cost-effective commenting system that limits participation to GitHub users. Gisqus also offers improved moderation controls, reduced spam, and seamless GitHub integration for a more secure and streamlined user experience. Detailed Overview The portfolio website is designed with both form and function in mind. Its key components include:\nResponsive Design: The site adapts seamlessly across devices, ensuring a great viewing experience on desktops, tablets, and mobile devices. SEO Optimization: Built according to SEO best practices to improve search engine visibility. Customizable Layout: Easily modified to add new sections or features as my portfolio evolves. Performance Optimization: Static site generation with Hugo ensures high performance and minimal load times. Preview Below is a screenshot preview of the portfolio website:\nLive Demo To view the live version of the portfolio website, please visit\u0026hellip;.. just kidding. You\u0026rsquo;re already on the website :): Visit My Portfolio\n","permalink":"https://mhassan.dev/projects/portfolio-site/","summary":"\u003ch3 id=\"key-features\"\u003eKey Features\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eMinimalist and Fast\u003c/strong\u003e: Developed with Hugo to ensure quick load times and an efficient design.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eIntuitive Navigation\u003c/strong\u003e: Utilizes the clean layout of PaperMod for an optimal user experience.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eIntegrated Blog and Projects Section\u003c/strong\u003e: Effectively presents my work, including detailed project pages and blog posts.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eReliable Deployment\u003c/strong\u003e: Hosted on GitHub Pages for stable and cost-effective performance.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eComments Integration with Gisqus\u003c/strong\u003e: Provides a cost-effective commenting system that limits participation to GitHub users. Gisqus also offers improved moderation controls, reduced spam, and seamless GitHub integration for a more secure and streamlined user experience.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"detailed-overview\"\u003eDetailed Overview\u003c/h3\u003e\n\u003cp\u003eThe portfolio website is designed with both form and function in mind. Its key components include:\u003c/p\u003e","title":"My Portfolio Website"},{"content":"You\u0026rsquo;ve reached a place that doesn\u0026rsquo;t exist. Maybe the page was moved, deleted, or never existed in the first place (peak gaslighting).\nHere\u0026rsquo;s what you can do: Go back to the homepage and start over. Explore my projects to see my work. Contact me if you need assistance. Or you can stay here and ponder the orb. The choice is yours.\n","permalink":"https://mhassan.dev/404.html","summary":"\u003cp\u003eYou\u0026rsquo;ve reached a place that doesn\u0026rsquo;t exist. Maybe the page was moved, deleted, or never existed in the first place (peak gaslighting).\u003c/p\u003e\n\u003ch3 id=\"heres-what-you-can-do\"\u003eHere\u0026rsquo;s what you can do:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"/\"\u003eGo back to the homepage\u003c/a\u003e and start over.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/projects/\"\u003eExplore my projects\u003c/a\u003e to see my work.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"/contact/\"\u003eContact me\u003c/a\u003e if you need assistance.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOr you can stay here and ponder the orb. The choice is yours.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"Pondering my Orb\" loading=\"lazy\" src=\"/assets/ponder.png\"\u003e\u003c/p\u003e","title":"404 - Page Not Found"}]